<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Failed suite [Messenger Backend API Test]" guice-stage="DEVELOPMENT" verbose="0">
  <listeners>
    <listener class-name="Listeners.ExtentReport"/>
    <listener class-name="Listeners.AllureListener"/>
    <listener class-name="Listeners.RetryListener"/>
  </listeners>
  <test thread-count="5" name="Activate Team(failed)" verbose="0">
    <classes>
      <class name="Collection.AutoAssign.ActivateTeam">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="ActivateTeam_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.AutoAssign.ActivateTeam -->
    </classes>
  </test> <!-- Activate Team(failed) -->
  <test thread-count="5" name="Update Teams(failed)" verbose="0">
    <classes>
      <class name="Collection.AutoAssign.UpdateTeam">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="UpdateTeam_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.AutoAssign.UpdateTeam -->
    </classes>
  </test> <!-- Update Teams(failed) -->
  <test thread-count="5" name="Accept User Chat Support(failed)" verbose="0">
    <classes>
      <class name="Collection.Accept_User_Chat_Support">
        <methods>
          <include name="Accept_User_Chat_Support_200"/>
          <include name="setUpConfiguration"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.Accept_User_Chat_Support -->
    </classes>
  </test> <!-- Accept User Chat Support(failed) -->
  <test thread-count="5" name="Accept User to Queue(failed)" verbose="0">
    <classes>
      <class name="Collection.Add_User_To_Queue">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="Add_User_To_Queue_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.Add_User_To_Queue -->
    </classes>
  </test> <!-- Accept User to Queue(failed) -->
  <test thread-count="5" name="Create Knowledge Base(failed)" verbose="0">
    <classes>
      <class name="Collection.Create_KnowledgeBase">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="Create_KnowledgeBase_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.Create_KnowledgeBase -->
    </classes>
  </test> <!-- Create Knowledge Base(failed) -->
  <test thread-count="5" name="Create User(failed)" verbose="0">
    <classes>
      <class name="Collection.CreateUser">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="CreateUser_409"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.CreateUser -->
    </classes>
  </test> <!-- Create User(failed) -->
  <test thread-count="5" name="End Support Chat(failed)" verbose="0">
    <classes>
      <class name="Collection.End_Support_Chat">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="End_Support_Chat_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.End_Support_Chat -->
    </classes>
  </test> <!-- End Support Chat(failed) -->
  <test thread-count="5" name="Get WebChat Last Session(failed)" verbose="0">
    <classes>
      <class name="Collection.Get_WebChat_Last_Session">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="Get_WebChat_Last_Session_400"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.Get_WebChat_Last_Session -->
    </classes>
  </test> <!-- Get WebChat Last Session(failed) -->
  <test thread-count="5" name="Get session archive(failed)" verbose="0">
    <classes>
      <class name="Collection.GetSessionArchive">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="GetIntent_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.GetSessionArchive -->
    </classes>
  </test> <!-- Get session archive(failed) -->
  <test thread-count="5" name="Get User by latest message enrolled(failed)" verbose="0">
    <classes>
      <class name="Collection.GetUser_By_Latest_Message_Enrolled">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="GetUser_By_Latest_Message_Enrolled_404"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.GetUser_By_Latest_Message_Enrolled -->
    </classes>
  </test> <!-- Get User by latest message enrolled(failed) -->
  <test thread-count="5" name="Get User info(failed)" verbose="0">
    <classes>
      <class name="Collection.GetUserInfo">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="GetUserInfo_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.GetUserInfo -->
    </classes>
  </test> <!-- Get User info(failed) -->
  <test thread-count="5" name="Get User by latest message not enrolled(failed)" verbose="0">
    <classes>
      <class name="Collection.GetUsers_By_Latest_Messages_Not_Enrolled">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="GetUser_By_Latest_Message_Not_Enrolled_404"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.GetUsers_By_Latest_Messages_Not_Enrolled -->
    </classes>
  </test> <!-- Get User by latest message not enrolled(failed) -->
  <test thread-count="5" name="Get user session webhook(failed)" verbose="0">
    <classes>
      <class name="Collection.GetUserSessionWebhook">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="GetUserSessionWebhook_400"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.GetUserSessionWebhook -->
    </classes>
  </test> <!-- Get user session webhook(failed) -->
  <test thread-count="5" name="Send Message Support(failed)" verbose="0">
    <classes>
      <class name="Collection.Send_Message_Support">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="Send_Message_Support_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.Send_Message_Support -->
    </classes>
  </test> <!-- Send Message Support(failed) -->
  <test thread-count="5" name="Trigger Intent Client(failed)" verbose="0">
    <classes>
      <class name="Collection.TriggerIntent_Client">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="TriggerIntent_Client_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.TriggerIntent_Client -->
    </classes>
  </test> <!-- Trigger Intent Client(failed) -->
  <test thread-count="5" name="Update User Archive(failed)" verbose="0">
    <classes>
      <class name="Collection.UpdateUserArchive">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="UpdateUserArchive_200"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.UpdateUserArchive -->
    </classes>
  </test> <!-- Update User Archive(failed) -->
  <test thread-count="5" name="Webchat message History(failed)" verbose="0">
    <classes>
      <class name="Collection.WebChatMessageHistory">
        <methods>
          <include name="setUpConfiguration"/>
          <include name="WebChatMessageHistory_400"/>
          <include name="Waiter"/>
        </methods>
      </class> <!-- Collection.WebChatMessageHistory -->
    </classes>
  </test> <!-- Webchat message History(failed) -->
</suite> <!-- Failed suite [Messenger Backend API Test] -->
