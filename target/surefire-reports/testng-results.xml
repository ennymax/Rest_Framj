<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="17" ignored="0" total="243" passed="209" failed="17" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-05T10:18:15 WAT" name="Messenger Backend API Test" finished-at="2022-02-05T10:36:09 WAT" duration-ms="1074688">
    <groups>
    </groups>
    <test started-at="2022-02-05T10:18:15 WAT" name="Activate Team" finished-at="2022-02-05T10:18:33 WAT" duration-ms="18755">
      <class name="Collection.AutoAssign.ActivateTeam">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:15 WAT" name="Waiter" finished-at="2022-02-05T10:18:15 WAT" duration-ms="525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:15 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:16 WAT" duration-ms="478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="ActivateTeam_200()[pri:1, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:16 WAT" name="ActivateTeam_200" finished-at="2022-02-05T10:18:22 WAT" duration-ms="6236" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.AutoAssign.ActivateTeam.ActivateTeam_200(ActivateTeam.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActivateTeam_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:22 WAT" name="Waiter" finished-at="2022-02-05T10:18:23 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:23 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:23 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ActivateTeam_200()[pri:1, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:23 WAT" name="ActivateTeam_200" finished-at="2022-02-05T10:18:28 WAT" duration-ms="5365" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.AutoAssign.ActivateTeam.ActivateTeam_200(ActivateTeam.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActivateTeam_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:28 WAT" name="Waiter" finished-at="2022-02-05T10:18:28 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:28 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:28 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ActivateTeam_401()[pri:2, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:28 WAT" name="ActivateTeam_401" finished-at="2022-02-05T10:18:30 WAT" duration-ms="1579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActivateTeam_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:30 WAT" name="Waiter" finished-at="2022-02-05T10:18:31 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:31 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:31 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ActivateTeam_403()[pri:3, instance:Collection.AutoAssign.ActivateTeam@6cdba6dc]" started-at="2022-02-05T10:18:31 WAT" name="ActivateTeam_403" finished-at="2022-02-05T10:18:33 WAT" duration-ms="2740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActivateTeam_403 -->
      </class> <!-- Collection.AutoAssign.ActivateTeam -->
    </test> <!-- Activate Team -->
    <test started-at="2022-02-05T10:18:34 WAT" name="Create Team" finished-at="2022-02-05T10:18:44 WAT" duration-ms="10469">
      <class name="Collection.AutoAssign.CreateTeam">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:34 WAT" name="Waiter" finished-at="2022-02-05T10:18:34 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:34 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:34 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateTeam_200()[pri:1, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:34 WAT" name="CreateTeam_200" finished-at="2022-02-05T10:18:39 WAT" duration-ms="4435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTeam_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:39 WAT" name="Waiter" finished-at="2022-02-05T10:18:39 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:39 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:39 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateTeam_401()[pri:2, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:39 WAT" name="CreateTeam_401" finished-at="2022-02-05T10:18:40 WAT" duration-ms="1379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTeam_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:41 WAT" name="Waiter" finished-at="2022-02-05T10:18:41 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="CreateTeam_403()[pri:3, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:41 WAT" name="CreateTeam_403" finished-at="2022-02-05T10:18:44 WAT" duration-ms="2959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTeam_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.CreateTeam@571c5681]" started-at="2022-02-05T10:18:41 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:41 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.AutoAssign.CreateTeam -->
    </test> <!-- Create Team -->
    <test started-at="2022-02-05T10:18:44 WAT" name="List Teams By Agent" finished-at="2022-02-05T10:18:54 WAT" duration-ms="10314">
      <class name="Collection.AutoAssign.List_Teams_By_Agent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:44 WAT" name="Waiter" finished-at="2022-02-05T10:18:45 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:45 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:45 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="List_Teams_By_Agent_200()[pri:1, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:45 WAT" name="List_Teams_By_Agent_200" finished-at="2022-02-05T10:18:49 WAT" duration-ms="3973" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- List_Teams_By_Agent_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:49 WAT" name="Waiter" finished-at="2022-02-05T10:18:49 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:49 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="List_Teams_By_Agent_401()[pri:2, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:49 WAT" name="List_Teams_By_Agent_401" finished-at="2022-02-05T10:18:50 WAT" duration-ms="1222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- List_Teams_By_Agent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:50 WAT" name="Waiter" finished-at="2022-02-05T10:18:51 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="List_Teams_By_Agent_403()[pri:3, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:51 WAT" name="List_Teams_By_Agent_403" finished-at="2022-02-05T10:18:54 WAT" duration-ms="3511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- List_Teams_By_Agent_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.List_Teams_By_Agent@5454d35e]" started-at="2022-02-05T10:18:51 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:51 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.AutoAssign.List_Teams_By_Agent -->
    </test> <!-- List Teams By Agent -->
    <test started-at="2022-02-05T10:18:55 WAT" name="Update Teams" finished-at="2022-02-05T10:19:15 WAT" duration-ms="20525">
      <class name="Collection.AutoAssign.UpdateTeam">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:18:55 WAT" name="Waiter" finished-at="2022-02-05T10:18:55 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:18:55 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:18:55 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="UpdateTeam_200()[pri:1, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:18:55 WAT" name="UpdateTeam_200" finished-at="2022-02-05T10:18:59 WAT" duration-ms="4326" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.AutoAssign.UpdateTeam.UpdateTeam_200(UpdateTeam.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTeam_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:18:59 WAT" name="Waiter" finished-at="2022-02-05T10:19:00 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="UpdateTeam_200()[pri:1, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:00 WAT" name="UpdateTeam_200" finished-at="2022-02-05T10:19:04 WAT" duration-ms="3866" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <500>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.AutoAssign.UpdateTeam.UpdateTeam_200(UpdateTeam.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTeam_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:00 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:00 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:04 WAT" name="Waiter" finished-at="2022-02-05T10:19:04 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="UpdateTeam_401()[pri:2, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:04 WAT" name="UpdateTeam_401" finished-at="2022-02-05T10:19:06 WAT" duration-ms="1632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTeam_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:04 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:04 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:06 WAT" name="Waiter" finished-at="2022-02-05T10:19:06 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:06 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:06 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateTeam_403()[pri:3, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:06 WAT" name="UpdateTeam_403" finished-at="2022-02-05T10:19:10 WAT" duration-ms="3139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTeam_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:10 WAT" name="Waiter" finished-at="2022-02-05T10:19:10 WAT" duration-ms="528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="UpdateTeam_404()[pri:4, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:10 WAT" name="UpdateTeam_404" finished-at="2022-02-05T10:19:15 WAT" duration-ms="4880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTeam_404 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AutoAssign.UpdateTeam@82ea68c]" started-at="2022-02-05T10:19:10 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:10 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.AutoAssign.UpdateTeam -->
    </test> <!-- Update Teams -->
    <test started-at="2022-02-05T10:19:15 WAT" name="List Google Project" finished-at="2022-02-05T10:19:25 WAT" duration-ms="9708">
      <class name="Collection.GoogleProject.ListGoogleProject">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:15 WAT" name="Waiter" finished-at="2022-02-05T10:19:16 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:16 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:16 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ListGoogleProject_200()[pri:1, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:16 WAT" name="ListGoogleProject_200" finished-at="2022-02-05T10:19:19 WAT" duration-ms="3726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ListGoogleProject_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:20 WAT" name="Waiter" finished-at="2022-02-05T10:19:20 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:20 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:20 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_My_Session_Support_401()[pri:2, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:20 WAT" name="Get_My_Session_Support_401" finished-at="2022-02-05T10:19:21 WAT" duration-ms="1383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_My_Session_Support_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:21 WAT" name="Waiter" finished-at="2022-02-05T10:19:22 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:22 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:22 WAT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ListGoogleProject_403()[pri:3, instance:Collection.GoogleProject.ListGoogleProject@74a6f9c1]" started-at="2022-02-05T10:19:22 WAT" name="ListGoogleProject_403" finished-at="2022-02-05T10:19:25 WAT" duration-ms="2874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ListGoogleProject_403 -->
      </class> <!-- Collection.GoogleProject.ListGoogleProject -->
    </test> <!-- List Google Project -->
    <test started-at="2022-02-05T10:19:25 WAT" name="Accept User Chat Support" finished-at="2022-02-05T10:19:43 WAT" duration-ms="18387">
      <class name="Collection.Accept_User_Chat_Support">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:25 WAT" name="Waiter" finished-at="2022-02-05T10:19:25 WAT" duration-ms="522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:25 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:25 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="Accept_User_Chat_Support_200()[pri:1, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:25 WAT" name="Accept_User_Chat_Support_200" finished-at="2022-02-05T10:19:29 WAT" duration-ms="3770" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Accept_User_Chat_Support.Accept_User_Chat_Support_200(Accept_User_Chat_Support.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accept_User_Chat_Support_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:29 WAT" name="Waiter" finished-at="2022-02-05T10:19:30 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Accept_User_Chat_Support_200()[pri:1, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:30 WAT" name="Accept_User_Chat_Support_200" finished-at="2022-02-05T10:19:33 WAT" duration-ms="3738" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Accept_User_Chat_Support.Accept_User_Chat_Support_200(Accept_User_Chat_Support.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accept_User_Chat_Support_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:30 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:30 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:33 WAT" name="Waiter" finished-at="2022-02-05T10:19:34 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:34 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:34 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Accept_User_Chat_Support_401()[pri:2, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:34 WAT" name="Accept_User_Chat_Support_401" finished-at="2022-02-05T10:19:36 WAT" duration-ms="1553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accept_User_Chat_Support_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:36 WAT" name="Waiter" finished-at="2022-02-05T10:19:36 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:36 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:36 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Accept_User_Chat_Support_403()[pri:3, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:36 WAT" name="Accept_User_Chat_Support_403" finished-at="2022-02-05T10:19:39 WAT" duration-ms="2647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accept_User_Chat_Support_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:39 WAT" name="Waiter" finished-at="2022-02-05T10:19:39 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:39 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:39 WAT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Accept_User_Chat_Support_404()[pri:4, instance:Collection.Accept_User_Chat_Support@7d9e8ef7]" started-at="2022-02-05T10:19:39 WAT" name="Accept_User_Chat_Support_404" finished-at="2022-02-05T10:19:43 WAT" duration-ms="4001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accept_User_Chat_Support_404 -->
      </class> <!-- Collection.Accept_User_Chat_Support -->
    </test> <!-- Accept User Chat Support -->
    <test started-at="2022-02-05T10:19:43 WAT" name="Accept User to Queue" finished-at="2022-02-05T10:20:04 WAT" duration-ms="20421">
      <class name="Collection.Add_User_To_Queue">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:43 WAT" name="Waiter" finished-at="2022-02-05T10:19:44 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:44 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:44 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="Add_User_To_Queue_200()[pri:1, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:44 WAT" name="Add_User_To_Queue_200" finished-at="2022-02-05T10:19:49 WAT" duration-ms="4784" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <403>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 403 Forbidden".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <403>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 403 Forbidden".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Add_User_To_Queue.Add_User_To_Queue_200(Add_User_To_Queue.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_User_To_Queue_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:49 WAT" name="Waiter" finished-at="2022-02-05T10:19:49 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Add_User_To_Queue_200()[pri:1, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:49 WAT" name="Add_User_To_Queue_200" finished-at="2022-02-05T10:19:54 WAT" duration-ms="4809" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <403>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 403 Forbidden".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <403>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 403 Forbidden".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Add_User_To_Queue.Add_User_To_Queue_200(Add_User_To_Queue.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_User_To_Queue_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:49 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:54 WAT" name="Waiter" finished-at="2022-02-05T10:19:55 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:55 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:55 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Add_User_To_Queue_401()[pri:2, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:55 WAT" name="Add_User_To_Queue_401" finished-at="2022-02-05T10:19:56 WAT" duration-ms="1402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_User_To_Queue_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:56 WAT" name="Waiter" finished-at="2022-02-05T10:19:57 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:57 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:19:57 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Add_User_To_Queue_403()[pri:3, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:57 WAT" name="Add_User_To_Queue_403" finished-at="2022-02-05T10:19:59 WAT" duration-ms="2822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_User_To_Queue_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:19:59 WAT" name="Waiter" finished-at="2022-02-05T10:20:00 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:20:00 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:00 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Add_User_To_Queue_404()[pri:4, instance:Collection.Add_User_To_Queue@38604b81]" started-at="2022-02-05T10:20:00 WAT" name="Add_User_To_Queue_404" finished-at="2022-02-05T10:20:04 WAT" duration-ms="3793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_User_To_Queue_404 -->
      </class> <!-- Collection.Add_User_To_Queue -->
    </test> <!-- Accept User to Queue -->
    <test started-at="2022-02-05T10:20:04 WAT" name="Accept Phrase to service" finished-at="2022-02-05T10:20:16 WAT" duration-ms="12559">
      <class name="Collection.AddPhraseTo_Service">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:04 WAT" name="Waiter" finished-at="2022-02-05T10:20:04 WAT" duration-ms="522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:04 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:04 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="AddPhraseTo_Service_200()[pri:1, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:04 WAT" name="AddPhraseTo_Service_200" finished-at="2022-02-05T10:20:11 WAT" duration-ms="6228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPhraseTo_Service_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:11 WAT" name="Waiter" finished-at="2022-02-05T10:20:11 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:11 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:11 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Add_Phrase_To_Service_401()[pri:2, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:11 WAT" name="Add_Phrase_To_Service_401" finished-at="2022-02-05T10:20:12 WAT" duration-ms="1318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_Phrase_To_Service_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:13 WAT" name="Waiter" finished-at="2022-02-05T10:20:13 WAT" duration-ms="529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Add_Phrase_To_Service_403()[pri:3, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:13 WAT" name="Add_Phrase_To_Service_403" finished-at="2022-02-05T10:20:16 WAT" duration-ms="3332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_Phrase_To_Service_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.AddPhraseTo_Service@69f1a286]" started-at="2022-02-05T10:20:13 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:13 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.AddPhraseTo_Service -->
    </test> <!-- Accept Phrase to service -->
    <test started-at="2022-02-05T10:20:16 WAT" name="Assign user agent to support" finished-at="2022-02-05T10:20:28 WAT" duration-ms="11209">
      <class name="Collection.Assign_User_Agent_to_Support">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:16 WAT" name="Waiter" finished-at="2022-02-05T10:20:17 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:17 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:17 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Assign_User_Agent_to_Support_200()[pri:1, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:17 WAT" name="Assign_User_Agent_to_Support_200" finished-at="2022-02-05T10:20:22 WAT" duration-ms="5238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assign_User_Agent_to_Support_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:22 WAT" name="Waiter" finished-at="2022-02-05T10:20:23 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:23 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:23 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Assign_User_Agent_to_Support_401()[pri:2, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:23 WAT" name="Assign_User_Agent_to_Support_401" finished-at="2022-02-05T10:20:24 WAT" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assign_User_Agent_to_Support_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:24 WAT" name="Waiter" finished-at="2022-02-05T10:20:25 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:25 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:25 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Assign_User_Agent_to_Support_403()[pri:3, instance:Collection.Assign_User_Agent_to_Support@71e9ebae]" started-at="2022-02-05T10:20:25 WAT" name="Assign_User_Agent_to_Support_403" finished-at="2022-02-05T10:20:28 WAT" duration-ms="3123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assign_User_Agent_to_Support_403 -->
      </class> <!-- Collection.Assign_User_Agent_to_Support -->
    </test> <!-- Assign user agent to support -->
    <test started-at="2022-02-05T10:20:28 WAT" name="Create KB Dialogue flow" finished-at="2022-02-05T10:20:42 WAT" duration-ms="14236">
      <class name="Collection.Create_KB_Dialogue_Flow">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:28 WAT" name="Waiter" finished-at="2022-02-05T10:20:28 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:28 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:28 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Create_KB_Dialogue_Flow_200()[pri:1, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:28 WAT" name="Create_KB_Dialogue_Flow_200" finished-at="2022-02-05T10:20:36 WAT" duration-ms="7534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_KB_Dialogue_Flow_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:36 WAT" name="Waiter" finished-at="2022-02-05T10:20:36 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:36 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:36 WAT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Create_KB_Dialogue_Flow_401()[pri:2, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:36 WAT" name="Create_KB_Dialogue_Flow_401" finished-at="2022-02-05T10:20:38 WAT" duration-ms="1678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_KB_Dialogue_Flow_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:38 WAT" name="Waiter" finished-at="2022-02-05T10:20:39 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:39 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:39 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Create_KB_Dialogue_Flow_403()[pri:3, instance:Collection.Create_KB_Dialogue_Flow@35645047]" started-at="2022-02-05T10:20:39 WAT" name="Create_KB_Dialogue_Flow_403" finished-at="2022-02-05T10:20:42 WAT" duration-ms="3340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_KB_Dialogue_Flow_403 -->
      </class> <!-- Collection.Create_KB_Dialogue_Flow -->
    </test> <!-- Create KB Dialogue flow -->
    <test started-at="2022-02-05T10:20:42 WAT" name="Create Knowledge Base" finished-at="2022-02-05T10:22:56 WAT" duration-ms="134325">
      <class name="Collection.Create_KnowledgeBase">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:20:42 WAT" name="Waiter" finished-at="2022-02-05T10:20:43 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:20:43 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:20:43 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="Create_KnowledgeBase_200()[pri:1, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:20:43 WAT" name="Create_KnowledgeBase_200" finished-at="2022-02-05T10:21:47 WAT" duration-ms="63878" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[4 expectations failed.
Expected status code <200> but was <504>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 504 Gateway Time-out".

Expected content-type "JSON" doesn't match actual content-type "text/html".

Expected response time was not a value less than <15L> seconds, was 61329 milliseconds (61 seconds).]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 4 expectations failed.
Expected status code <200> but was <504>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 504 Gateway Time-out".

Expected content-type "JSON" doesn't match actual content-type "text/html".

Expected response time was not a value less than <15L> seconds, was 61329 milliseconds (61 seconds).
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Create_KnowledgeBase.Create_KnowledgeBase_200(Create_KnowledgeBase.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_KnowledgeBase_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:21:47 WAT" name="Waiter" finished-at="2022-02-05T10:21:47 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:21:47 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:21:47 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Create_KnowledgeBase_200()[pri:1, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:21:47 WAT" name="Create_KnowledgeBase_200" finished-at="2022-02-05T10:22:51 WAT" duration-ms="63872" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[4 expectations failed.
Expected status code <200> but was <504>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 504 Gateway Time-out".

Expected content-type "JSON" doesn't match actual content-type "text/html".

Expected response time was not a value less than <15L> seconds, was 61537 milliseconds (61 seconds).]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 4 expectations failed.
Expected status code <200> but was <504>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 504 Gateway Time-out".

Expected content-type "JSON" doesn't match actual content-type "text/html".

Expected response time was not a value less than <15L> seconds, was 61537 milliseconds (61 seconds).
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Create_KnowledgeBase.Create_KnowledgeBase_200(Create_KnowledgeBase.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_KnowledgeBase_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:22:51 WAT" name="Waiter" finished-at="2022-02-05T10:22:51 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Create_KnowledgeBase_401()[pri:2, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:22:51 WAT" name="Create_KnowledgeBase_401" finished-at="2022-02-05T10:22:53 WAT" duration-ms="1346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_KnowledgeBase_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:22:51 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:22:51 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:22:53 WAT" name="Waiter" finished-at="2022-02-05T10:22:53 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:22:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:22:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Create_KnowledgeBase_403()[pri:3, instance:Collection.Create_KnowledgeBase@d771cc9]" started-at="2022-02-05T10:22:53 WAT" name="Create_KnowledgeBase_403" finished-at="2022-02-05T10:22:56 WAT" duration-ms="3018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_KnowledgeBase_403 -->
      </class> <!-- Collection.Create_KnowledgeBase -->
    </test> <!-- Create Knowledge Base -->
    <test started-at="2022-02-05T10:22:57 WAT" name="Create User session Client" finished-at="2022-02-05T10:23:08 WAT" duration-ms="11445">
      <class name="Collection.Create_user_session_client">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:22:57 WAT" name="Waiter" finished-at="2022-02-05T10:22:57 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Create_user_session_client_200()[pri:1, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:22:57 WAT" name="Create_user_session_client_200" finished-at="2022-02-05T10:23:02 WAT" duration-ms="4715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_user_session_client_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:22:57 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:22:57 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:23:02 WAT" name="Waiter" finished-at="2022-02-05T10:23:02 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Create_user_session_client_401()[pri:2, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:23:02 WAT" name="Create_user_session_client_401" finished-at="2022-02-05T10:23:04 WAT" duration-ms="1721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_user_session_client_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:23:02 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:02 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:23:04 WAT" name="Waiter" finished-at="2022-02-05T10:23:05 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:23:05 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:05 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Create_user_session_client_403()[pri:3, instance:Collection.Create_user_session_client@481ba2cf]" started-at="2022-02-05T10:23:05 WAT" name="Create_user_session_client_403" finished-at="2022-02-05T10:23:08 WAT" duration-ms="3343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_user_session_client_403 -->
      </class> <!-- Collection.Create_user_session_client -->
    </test> <!-- Create User session Client -->
    <test started-at="2022-02-05T10:23:08 WAT" name="Create User" finished-at="2022-02-05T10:23:34 WAT" duration-ms="25926">
      <class name="Collection.CreateUser">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:08 WAT" name="Waiter" finished-at="2022-02-05T10:23:09 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:09 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:09 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateUser_200()[pri:1, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:09 WAT" name="CreateUser_200" finished-at="2022-02-05T10:23:14 WAT" duration-ms="5169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUser_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:14 WAT" name="Waiter" finished-at="2022-02-05T10:23:14 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:14 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:14 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateUser_401()[pri:2, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:14 WAT" name="CreateUser_401" finished-at="2022-02-05T10:23:16 WAT" duration-ms="1630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUser_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:16 WAT" name="Waiter" finished-at="2022-02-05T10:23:16 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="CreateUser_403()[pri:3, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:16 WAT" name="CreateUser_403" finished-at="2022-02-05T10:23:19 WAT" duration-ms="2974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUser_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:16 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:16 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:19 WAT" name="Waiter" finished-at="2022-02-05T10:23:20 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="CreateUser_400()[pri:5, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:20 WAT" name="CreateUser_400" finished-at="2022-02-05T10:23:24 WAT" duration-ms="4217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUser_400 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:20 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:20 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:24 WAT" name="Waiter" finished-at="2022-02-05T10:23:25 WAT" duration-ms="525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method retried="true" signature="CreateUser_409()[pri:6, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:25 WAT" name="CreateUser_409" finished-at="2022-02-05T10:23:29 WAT" duration-ms="4507" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <409> but was <200>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 200 OK".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <409> but was <200>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 200 OK".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.CreateUser.CreateUser_409(CreateUser.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUser_409 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:25 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:25 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:29 WAT" name="Waiter" finished-at="2022-02-05T10:23:30 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:30 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:30 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateUser_409()[pri:6, instance:Collection.CreateUser@1b75c2e3]" started-at="2022-02-05T10:23:30 WAT" name="CreateUser_409" finished-at="2022-02-05T10:23:34 WAT" duration-ms="4124" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <409> but was <200>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 200 OK".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <409> but was <200>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 200 OK".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.CreateUser.CreateUser_409(CreateUser.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUser_409 -->
      </class> <!-- Collection.CreateUser -->
    </test> <!-- Create User -->
    <test started-at="2022-02-05T10:23:34 WAT" name="Dashboard Service" finished-at="2022-02-05T10:23:48 WAT" duration-ms="13593">
      <class name="Collection.DashBoard_Service">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:34 WAT" name="Waiter" finished-at="2022-02-05T10:23:35 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:35 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:35 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DashBoard_Service_200()[pri:1, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:35 WAT" name="DashBoard_Service_200" finished-at="2022-02-05T10:23:42 WAT" duration-ms="7145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DashBoard_Service_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:42 WAT" name="Waiter" finished-at="2022-02-05T10:23:42 WAT" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:42 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:42 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DashBoard_Service_401()[pri:2, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:42 WAT" name="DashBoard_Service_401" finished-at="2022-02-05T10:23:44 WAT" duration-ms="1451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DashBoard_Service_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:44 WAT" name="Waiter" finished-at="2022-02-05T10:23:44 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:44 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:44 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DashBoard_Service_403()[pri:3, instance:Collection.DashBoard_Service@65b104b9]" started-at="2022-02-05T10:23:44 WAT" name="DashBoard_Service_403" finished-at="2022-02-05T10:23:48 WAT" duration-ms="3324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DashBoard_Service_403 -->
      </class> <!-- Collection.DashBoard_Service -->
    </test> <!-- Dashboard Service -->
    <test started-at="2022-02-05T10:23:48 WAT" name="Detect Intent" finished-at="2022-02-05T10:23:57 WAT" duration-ms="9720">
      <class name="Collection.DetectIntent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:48 WAT" name="Waiter" finished-at="2022-02-05T10:23:48 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:48 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:48 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DetectIntent_401()[pri:2, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:48 WAT" name="DetectIntent_401" finished-at="2022-02-05T10:23:49 WAT" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DetectIntent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:49 WAT" name="Waiter" finished-at="2022-02-05T10:23:50 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:50 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:50 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DetectIntent_403()[pri:3, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:50 WAT" name="DetectIntent_403" finished-at="2022-02-05T10:23:53 WAT" duration-ms="2916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DetectIntent_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:53 WAT" name="Waiter" finished-at="2022-02-05T10:23:53 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DetectIntent_400()[pri:5, instance:Collection.DetectIntent@1fb669c3]" started-at="2022-02-05T10:23:53 WAT" name="DetectIntent_400" finished-at="2022-02-05T10:23:57 WAT" duration-ms="4018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DetectIntent_400 -->
      </class> <!-- Collection.DetectIntent -->
    </test> <!-- Detect Intent -->
    <test started-at="2022-02-05T10:23:58 WAT" name="End Support Chat" finished-at="2022-02-05T10:24:18 WAT" duration-ms="20533">
      <class name="Collection.End_Support_Chat">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:23:58 WAT" name="Waiter" finished-at="2022-02-05T10:23:58 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:23:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:23:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="End_Support_Chat_200()[pri:1, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:23:58 WAT" name="End_Support_Chat_200" finished-at="2022-02-05T10:24:02 WAT" duration-ms="3916" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.End_Support_Chat.End_Support_Chat_200(End_Support_Chat.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End_Support_Chat_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:02 WAT" name="Waiter" finished-at="2022-02-05T10:24:03 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="End_Support_Chat_200()[pri:1, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:03 WAT" name="End_Support_Chat_200" finished-at="2022-02-05T10:24:07 WAT" duration-ms="4625" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.End_Support_Chat.End_Support_Chat_200(End_Support_Chat.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End_Support_Chat_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:03 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:03 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:07 WAT" name="Waiter" finished-at="2022-02-05T10:24:08 WAT" duration-ms="525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:08 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:08 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="End_Support_Chat_401()[pri:2, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:08 WAT" name="End_Support_Chat_401" finished-at="2022-02-05T10:24:09 WAT" duration-ms="1668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End_Support_Chat_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:09 WAT" name="Waiter" finished-at="2022-02-05T10:24:10 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="End_Support_Chat_403()[pri:3, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:10 WAT" name="End_Support_Chat_403" finished-at="2022-02-05T10:24:13 WAT" duration-ms="3376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End_Support_Chat_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:10 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:10 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:13 WAT" name="Waiter" finished-at="2022-02-05T10:24:14 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:14 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:14 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="End_Support_Chat_404()[pri:4, instance:Collection.End_Support_Chat@5be46f9d]" started-at="2022-02-05T10:24:14 WAT" name="End_Support_Chat_404" finished-at="2022-02-05T10:24:18 WAT" duration-ms="4149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End_Support_Chat_404 -->
      </class> <!-- Collection.End_Support_Chat -->
    </test> <!-- End Support Chat -->
    <test started-at="2022-02-05T10:24:18 WAT" name="Get Active Agent Support" finished-at="2022-02-05T10:24:29 WAT" duration-ms="10618">
      <class name="Collection.Get_ActiveAgent_Support">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:18 WAT" name="Waiter" finished-at="2022-02-05T10:24:19 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_ActiveAgent_Support_200()[pri:1, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:19 WAT" name="Get_ActiveAgent_Support_200" finished-at="2022-02-05T10:24:23 WAT" duration-ms="4055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_ActiveAgent_Support_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:19 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:19 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:23 WAT" name="Waiter" finished-at="2022-02-05T10:24:23 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_ActiveAgent_Support_401()[pri:2, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:23 WAT" name="Get_ActiveAgent_Support_401" finished-at="2022-02-05T10:24:25 WAT" duration-ms="1684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_ActiveAgent_Support_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:23 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:23 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:25 WAT" name="Waiter" finished-at="2022-02-05T10:24:26 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:26 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:26 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_ActiveAgent_Support_403()[pri:3, instance:Collection.Get_ActiveAgent_Support@21ba0741]" started-at="2022-02-05T10:24:26 WAT" name="Get_ActiveAgent_Support_403" finished-at="2022-02-05T10:24:29 WAT" duration-ms="3144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_ActiveAgent_Support_403 -->
      </class> <!-- Collection.Get_ActiveAgent_Support -->
    </test> <!-- Get Active Agent Support -->
    <test started-at="2022-02-05T10:24:29 WAT" name="Get Agent settings Admin" finished-at="2022-02-05T10:24:39 WAT" duration-ms="10083">
      <class name="Collection.Get_Agent_Setting_Admin">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:29 WAT" name="Waiter" finished-at="2022-02-05T10:24:29 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_Agent_Setting_Admin_200()[pri:1, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:29 WAT" name="Get_Agent_Setting_Admin_200" finished-at="2022-02-05T10:24:33 WAT" duration-ms="3901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Agent_Setting_Admin_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:29 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:29 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:33 WAT" name="Waiter" finished-at="2022-02-05T10:24:34 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_Agent_Setting_Admin_401()[pri:2, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:34 WAT" name="Get_Agent_Setting_Admin_401" finished-at="2022-02-05T10:24:36 WAT" duration-ms="1679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Agent_Setting_Admin_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:34 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:34 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:36 WAT" name="Waiter" finished-at="2022-02-05T10:24:36 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_Agent_Setting_Admin_403()[pri:3, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:36 WAT" name="Get_Agent_Setting_Admin_403" finished-at="2022-02-05T10:24:39 WAT" duration-ms="2820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Agent_Setting_Admin_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Agent_Setting_Admin@62010f5c]" started-at="2022-02-05T10:24:36 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:36 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.Get_Agent_Setting_Admin -->
    </test> <!-- Get Agent settings Admin -->
    <test started-at="2022-02-05T10:24:39 WAT" name="Get Agent settings user" finished-at="2022-02-05T10:24:50 WAT" duration-ms="10630">
      <class name="Collection.Get_Agent_Setting_User">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:39 WAT" name="Waiter" finished-at="2022-02-05T10:24:40 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:40 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:40 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Agent_Setting_User_200()[pri:1, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:40 WAT" name="Get_Agent_Setting_User_200" finished-at="2022-02-05T10:24:44 WAT" duration-ms="3976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Agent_Setting_User_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:44 WAT" name="Waiter" finished-at="2022-02-05T10:24:44 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:44 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:44 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Agent_Setting_User_401()[pri:2, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:44 WAT" name="Get_Agent_Setting_User_401" finished-at="2022-02-05T10:24:46 WAT" duration-ms="1644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Agent_Setting_User_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:46 WAT" name="Waiter" finished-at="2022-02-05T10:24:46 WAT" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:46 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:46 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Agent_Setting_User_403()[pri:3, instance:Collection.Get_Agent_Setting_User@132e0cc]" started-at="2022-02-05T10:24:46 WAT" name="Get_Agent_Setting_User_403" finished-at="2022-02-05T10:24:50 WAT" duration-ms="3288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Agent_Setting_User_403 -->
      </class> <!-- Collection.Get_Agent_Setting_User -->
    </test> <!-- Get Agent settings user -->
    <test started-at="2022-02-05T10:24:50 WAT" name="Get Failed response by date" finished-at="2022-02-05T10:25:00 WAT" duration-ms="10477">
      <class name="Collection.Get_Failed_ResponseBy_Date">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:50 WAT" name="Waiter" finished-at="2022-02-05T10:24:50 WAT" duration-ms="528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:50 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:50 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Failed_Response_Date_200()[pri:1, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:50 WAT" name="Search_Failed_Response_Date_200" finished-at="2022-02-05T10:24:54 WAT" duration-ms="4063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Failed_Response_Date_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:54 WAT" name="Waiter" finished-at="2022-02-05T10:24:55 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:55 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:55 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Failed_Response_Date_401()[pri:2, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:55 WAT" name="Search_Failed_Response_Date_401" finished-at="2022-02-05T10:24:56 WAT" duration-ms="1452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Failed_Response_Date_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:56 WAT" name="Waiter" finished-at="2022-02-05T10:24:57 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:57 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:24:57 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Failed_Response_Date_403()[pri:3, instance:Collection.Get_Failed_ResponseBy_Date@600b90df]" started-at="2022-02-05T10:24:57 WAT" name="Search_Failed_Response_Date_403" finished-at="2022-02-05T10:25:00 WAT" duration-ms="3255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Failed_Response_Date_403 -->
      </class> <!-- Collection.Get_Failed_ResponseBy_Date -->
    </test> <!-- Get Failed response by date -->
    <test started-at="2022-02-05T10:25:00 WAT" name="Get my session support" finished-at="2022-02-05T10:25:11 WAT" duration-ms="10492">
      <class name="Collection.Get_My_Session_Support">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:00 WAT" name="Waiter" finished-at="2022-02-05T10:25:01 WAT" duration-ms="523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_My_Session_Support_200()[pri:1, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:01 WAT" name="Get_My_Session_Support_200" finished-at="2022-02-05T10:25:05 WAT" duration-ms="4031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_My_Session_Support_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:01 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:01 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:05 WAT" name="Waiter" finished-at="2022-02-05T10:25:05 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:05 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:05 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_My_Session_Support_401()[pri:2, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:05 WAT" name="Get_My_Session_Support_401" finished-at="2022-02-05T10:25:07 WAT" duration-ms="1691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_My_Session_Support_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:07 WAT" name="Waiter" finished-at="2022-02-05T10:25:08 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:08 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:08 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_My_Session_Support_403()[pri:3, instance:Collection.Get_My_Session_Support@3d9c13b5]" started-at="2022-02-05T10:25:08 WAT" name="Get_My_Session_Support_403" finished-at="2022-02-05T10:25:11 WAT" duration-ms="3045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_My_Session_Support_403 -->
      </class> <!-- Collection.Get_My_Session_Support -->
    </test> <!-- Get my session support -->
    <test started-at="2022-02-05T10:25:11 WAT" name="Get No Matched Messages" finished-at="2022-02-05T10:25:18 WAT" duration-ms="7563">
      <class name="Collection.Get_No_Matched_Messages">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_No_Matched_Messages@6c2c1385]" started-at="2022-02-05T10:25:11 WAT" name="Waiter" finished-at="2022-02-05T10:25:11 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_No_Matched_Messages@6c2c1385]" started-at="2022-02-05T10:25:11 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:11 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_No_Matched_Messages_200()[pri:1, instance:Collection.Get_No_Matched_Messages@6c2c1385]" started-at="2022-02-05T10:25:11 WAT" name="Get_No_Matched_Messages_200" finished-at="2022-02-05T10:25:16 WAT" duration-ms="4590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_No_Matched_Messages_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_No_Matched_Messages@6c2c1385]" started-at="2022-02-05T10:25:16 WAT" name="Waiter" finished-at="2022-02-05T10:25:17 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_No_Matched_Messages@6c2c1385]" started-at="2022-02-05T10:25:17 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:17 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_No_Matched_Messages_401()[pri:2, instance:Collection.Get_No_Matched_Messages@6c2c1385]" started-at="2022-02-05T10:25:17 WAT" name="Get_No_Matched_Messages_401" finished-at="2022-02-05T10:25:18 WAT" duration-ms="1784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_No_Matched_Messages_401 -->
      </class> <!-- Collection.Get_No_Matched_Messages -->
    </test> <!-- Get No Matched Messages -->
    <test started-at="2022-02-05T10:25:19 WAT" name="Get NotificationBatch" finished-at="2022-02-05T10:25:29 WAT" duration-ms="10444">
      <class name="Collection.Get_Notification_Batch">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:19 WAT" name="Waiter" finished-at="2022-02-05T10:25:19 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_Notification_Batch_200()[pri:1, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:19 WAT" name="Get_Notification_Batch_200" finished-at="2022-02-05T10:25:23 WAT" duration-ms="4041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Notification_Batch_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:19 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:19 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:23 WAT" name="Waiter" finished-at="2022-02-05T10:25:24 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:24 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:24 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Notification_Batch_401()[pri:2, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:24 WAT" name="Get_Notification_Batch_401" finished-at="2022-02-05T10:25:25 WAT" duration-ms="1492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Notification_Batch_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:25 WAT" name="Waiter" finished-at="2022-02-05T10:25:26 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:26 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:26 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Notification_Batch_403()[pri:3, instance:Collection.Get_Notification_Batch@2f67b837]" started-at="2022-02-05T10:25:26 WAT" name="Get_Notification_Batch_403" finished-at="2022-02-05T10:25:29 WAT" duration-ms="3107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Notification_Batch_403 -->
      </class> <!-- Collection.Get_Notification_Batch -->
    </test> <!-- Get NotificationBatch -->
    <test started-at="2022-02-05T10:25:29 WAT" name="Get Notification By Batch" finished-at="2022-02-05T10:25:39 WAT" duration-ms="10094">
      <class name="Collection.Get_Notification_By_Batch">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:29 WAT" name="Waiter" finished-at="2022-02-05T10:25:30 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:30 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:30 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Notification_By_Batch_200()[pri:1, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:30 WAT" name="Get_Notification_By_Batch_200" finished-at="2022-02-05T10:25:33 WAT" duration-ms="3744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Notification_By_Batch_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:33 WAT" name="Waiter" finished-at="2022-02-05T10:25:34 WAT" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:34 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:34 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Notification_By_Batch_401()[pri:2, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:34 WAT" name="Get_Notification_By_Batch_401" finished-at="2022-02-05T10:25:36 WAT" duration-ms="1672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Notification_By_Batch_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:36 WAT" name="Waiter" finished-at="2022-02-05T10:25:36 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:36 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:36 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Notification_By_Batch_Batch_403()[pri:3, instance:Collection.Get_Notification_By_Batch@3b7d3a38]" started-at="2022-02-05T10:25:36 WAT" name="Get_Notification_By_Batch_Batch_403" finished-at="2022-02-05T10:25:39 WAT" duration-ms="2894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Notification_By_Batch_Batch_403 -->
      </class> <!-- Collection.Get_Notification_By_Batch -->
    </test> <!-- Get Notification By Batch -->
    <test started-at="2022-02-05T10:25:39 WAT" name="Get WebChat Last Session" finished-at="2022-02-05T10:26:00 WAT" duration-ms="20418">
      <class name="Collection.Get_WebChat_Last_Session">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:39 WAT" name="Waiter" finished-at="2022-02-05T10:25:40 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:40 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:40 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_WebChat_Last_Session_200()[pri:1, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:40 WAT" name="Get_WebChat_Last_Session_200" finished-at="2022-02-05T10:25:45 WAT" duration-ms="4850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_WebChat_Last_Session_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:45 WAT" name="Waiter" finished-at="2022-02-05T10:25:45 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:45 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:45 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_WebChat_Last_Session_401()[pri:2, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:45 WAT" name="Get_WebChat_Last_Session_401" finished-at="2022-02-05T10:25:47 WAT" duration-ms="1720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_WebChat_Last_Session_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:47 WAT" name="Waiter" finished-at="2022-02-05T10:25:48 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Get_WebChat_Last_Session_403()[pri:3, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:48 WAT" name="Get_WebChat_Last_Session_403" finished-at="2022-02-05T10:25:51 WAT" duration-ms="3356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_WebChat_Last_Session_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:48 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:48 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:51 WAT" name="Waiter" finished-at="2022-02-05T10:25:51 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method retried="true" signature="Get_WebChat_Last_Session_400()[pri:5, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:52 WAT" name="Get_WebChat_Last_Session_400" finished-at="2022-02-05T10:25:55 WAT" duration-ms="3468" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Get_WebChat_Last_Session.Get_WebChat_Last_Session_400(Get_WebChat_Last_Session.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_WebChat_Last_Session_400 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:52 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:52 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:55 WAT" name="Waiter" finished-at="2022-02-05T10:25:56 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:56 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:25:56 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_WebChat_Last_Session_400()[pri:5, instance:Collection.Get_WebChat_Last_Session@14fc1f0]" started-at="2022-02-05T10:25:56 WAT" name="Get_WebChat_Last_Session_400" finished-at="2022-02-05T10:26:00 WAT" duration-ms="4063" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Get_WebChat_Last_Session.Get_WebChat_Last_Session_400(Get_WebChat_Last_Session.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_WebChat_Last_Session_400 -->
      </class> <!-- Collection.Get_WebChat_Last_Session -->
    </test> <!-- Get WebChat Last Session -->
    <test started-at="2022-02-05T10:26:00 WAT" name="Get Agent By ID" finished-at="2022-02-05T10:26:10 WAT" duration-ms="10463">
      <class name="Collection.GetAgentBy_ID">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:00 WAT" name="Waiter" finished-at="2022-02-05T10:26:00 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:00 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:00 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentBy_ID_200()[pri:1, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:00 WAT" name="GetAgentBy_ID_200" finished-at="2022-02-05T10:26:04 WAT" duration-ms="3862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentBy_ID_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:04 WAT" name="Waiter" finished-at="2022-02-05T10:26:05 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:05 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:05 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentBy_ID_401()[pri:2, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:05 WAT" name="GetAgentBy_ID_401" finished-at="2022-02-05T10:26:07 WAT" duration-ms="1807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentBy_ID_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:07 WAT" name="Waiter" finished-at="2022-02-05T10:26:07 WAT" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:07 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:07 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentBy_ID_403()[pri:3, instance:Collection.GetAgentBy_ID@130e116b]" started-at="2022-02-05T10:26:07 WAT" name="GetAgentBy_ID_403" finished-at="2022-02-05T10:26:10 WAT" duration-ms="3066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentBy_ID_403 -->
      </class> <!-- Collection.GetAgentBy_ID -->
    </test> <!-- Get Agent By ID -->
    <test started-at="2022-02-05T10:26:10 WAT" name="Get Agent StakeHolder" finished-at="2022-02-05T10:26:21 WAT" duration-ms="10420">
      <class name="Collection.GetAgentStakeHolder">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:10 WAT" name="Waiter" finished-at="2022-02-05T10:26:11 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:11 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:11 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentStakeHolder_200()[pri:1, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:11 WAT" name="GetAgentStakeHolder_200" finished-at="2022-02-05T10:26:15 WAT" duration-ms="4220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentStakeHolder_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:15 WAT" name="Waiter" finished-at="2022-02-05T10:26:16 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:16 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:16 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentStakeHolder_401()[pri:2, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:16 WAT" name="GetAgentStakeHolder_401" finished-at="2022-02-05T10:26:17 WAT" duration-ms="1577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentStakeHolder_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:17 WAT" name="Waiter" finished-at="2022-02-05T10:26:18 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:18 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:18 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentStakeHolder_403()[pri:3, instance:Collection.GetAgentStakeHolder@5f9be66c]" started-at="2022-02-05T10:26:18 WAT" name="GetAgentStakeHolder_403" finished-at="2022-02-05T10:26:21 WAT" duration-ms="2918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentStakeHolder_403 -->
      </class> <!-- Collection.GetAgentStakeHolder -->
    </test> <!-- Get Agent StakeHolder -->
    <test started-at="2022-02-05T10:26:21 WAT" name="Get Agent Channel" finished-at="2022-02-05T10:26:32 WAT" duration-ms="11407">
      <class name="Collection.GetChannel">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:21 WAT" name="Waiter" finished-at="2022-02-05T10:26:21 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:21 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:21 WAT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SaveChannel_200()[pri:1, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:21 WAT" name="SaveChannel_200" finished-at="2022-02-05T10:26:25 WAT" duration-ms="4064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaveChannel_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:25 WAT" name="Waiter" finished-at="2022-02-05T10:26:26 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:26 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:26 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_All_Channel_401()[pri:2, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:26 WAT" name="Get_All_Channel_401" finished-at="2022-02-05T10:26:28 WAT" duration-ms="1742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_All_Channel_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:28 WAT" name="Waiter" finished-at="2022-02-05T10:26:28 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:28 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:28 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SaveChannel_403()[pri:3, instance:Collection.GetChannel@7b420819]" started-at="2022-02-05T10:26:28 WAT" name="SaveChannel_403" finished-at="2022-02-05T10:26:32 WAT" duration-ms="3950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaveChannel_403 -->
      </class> <!-- Collection.GetChannel -->
    </test> <!-- Get Agent Channel -->
    <test started-at="2022-02-05T10:26:32 WAT" name="Get Agent current session" finished-at="2022-02-05T10:26:43 WAT" duration-ms="10382">
      <class name="Collection.GetCurrentSession">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:32 WAT" name="Waiter" finished-at="2022-02-05T10:26:33 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetCurrentSession_200()[pri:1, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:33 WAT" name="GetCurrentSession_200" finished-at="2022-02-05T10:26:37 WAT" duration-ms="4119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCurrentSession_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:33 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:33 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:37 WAT" name="Waiter" finished-at="2022-02-05T10:26:38 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:38 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:38 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetCurrentSession_401()[pri:2, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:38 WAT" name="GetCurrentSession_401" finished-at="2022-02-05T10:26:39 WAT" duration-ms="1485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCurrentSession_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:39 WAT" name="Waiter" finished-at="2022-02-05T10:26:40 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:40 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:40 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetCurrentSession_403()[pri:3, instance:Collection.GetCurrentSession@1e461e41]" started-at="2022-02-05T10:26:40 WAT" name="GetCurrentSession_403" finished-at="2022-02-05T10:26:43 WAT" duration-ms="3020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCurrentSession_403 -->
      </class> <!-- Collection.GetCurrentSession -->
    </test> <!-- Get Agent current session -->
    <test started-at="2022-02-05T10:26:43 WAT" name="Get Agent Intent" finished-at="2022-02-05T10:26:53 WAT" duration-ms="10577">
      <class name="Collection.GetIntent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:43 WAT" name="Waiter" finished-at="2022-02-05T10:26:43 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetIntent_200()[pri:1, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:43 WAT" name="GetIntent_200" finished-at="2022-02-05T10:26:48 WAT" duration-ms="4191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIntent_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:43 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:43 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:48 WAT" name="Waiter" finished-at="2022-02-05T10:26:48 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:48 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:48 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetIntent_401()[pri:2, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:48 WAT" name="GetIntent_401" finished-at="2022-02-05T10:26:50 WAT" duration-ms="1550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIntent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:50 WAT" name="Waiter" finished-at="2022-02-05T10:26:50 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:50 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:50 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetIntent_403()[pri:3, instance:Collection.GetIntent@30e868be]" started-at="2022-02-05T10:26:50 WAT" name="GetIntent_403" finished-at="2022-02-05T10:26:53 WAT" duration-ms="3088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIntent_403 -->
      </class> <!-- Collection.GetIntent -->
    </test> <!-- Get Agent Intent -->
    <test started-at="2022-02-05T10:26:54 WAT" name="Get Agent Location by Agent" finished-at="2022-02-05T10:27:04 WAT" duration-ms="10837">
      <class name="Collection.GetLocationByAgent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:26:54 WAT" name="Waiter" finished-at="2022-02-05T10:26:54 WAT" duration-ms="525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:26:54 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:54 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetLocationByAgent_200()[pri:1, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:26:54 WAT" name="GetLocationByAgent_200" finished-at="2022-02-05T10:26:58 WAT" duration-ms="4290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetLocationByAgent_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:26:58 WAT" name="Waiter" finished-at="2022-02-05T10:26:59 WAT" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:26:59 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:26:59 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetLocationByAgent_401()[pri:2, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:26:59 WAT" name="GetLocationByAgent_401" finished-at="2022-02-05T10:27:01 WAT" duration-ms="1619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetLocationByAgent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:27:01 WAT" name="Waiter" finished-at="2022-02-05T10:27:01 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:27:01 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:01 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetLocationByAgent_403()[pri:3, instance:Collection.GetLocationByAgent@1e097d59]" started-at="2022-02-05T10:27:01 WAT" name="GetLocationByAgent_403" finished-at="2022-02-05T10:27:04 WAT" duration-ms="3109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetLocationByAgent_403 -->
      </class> <!-- Collection.GetLocationByAgent -->
    </test> <!-- Get Agent Location by Agent -->
    <test started-at="2022-02-05T10:27:04 WAT" name="Get Notification by Agent" finished-at="2022-02-05T10:27:15 WAT" duration-ms="10970">
      <class name="Collection.GetNotificationByAgent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:04 WAT" name="Waiter" finished-at="2022-02-05T10:27:05 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:05 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:05 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetNotificationByAgent_200()[pri:1, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:05 WAT" name="GetNotificationByAgent_200" finished-at="2022-02-05T10:27:09 WAT" duration-ms="4396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetNotificationByAgent_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:09 WAT" name="Waiter" finished-at="2022-02-05T10:27:10 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:10 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:10 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetNotificationByAgent_401()[pri:2, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:10 WAT" name="GetNotificationByAgent_401" finished-at="2022-02-05T10:27:12 WAT" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetNotificationByAgent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:12 WAT" name="Waiter" finished-at="2022-02-05T10:27:13 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:13 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:13 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetNotificationByAgent_403()[pri:3, instance:Collection.GetNotificationByAgent@58326051]" started-at="2022-02-05T10:27:13 WAT" name="GetNotificationByAgent_403" finished-at="2022-02-05T10:27:15 WAT" duration-ms="2774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetNotificationByAgent_403 -->
      </class> <!-- Collection.GetNotificationByAgent -->
    </test> <!-- Get Notification by Agent -->
    <test started-at="2022-02-05T10:27:16 WAT" name="Get Queue list support" finished-at="2022-02-05T10:27:26 WAT" duration-ms="10953">
      <class name="Collection.GetQueueList_Support">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:16 WAT" name="Waiter" finished-at="2022-02-05T10:27:16 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:16 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:16 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetQueueList_Support_200()[pri:1, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:16 WAT" name="GetQueueList_Support_200" finished-at="2022-02-05T10:27:21 WAT" duration-ms="4573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetQueueList_Support_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:21 WAT" name="Waiter" finished-at="2022-02-05T10:27:21 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:21 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:21 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetQueueList_Support_401()[pri:2, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:21 WAT" name="GetQueueList_Support_401" finished-at="2022-02-05T10:27:22 WAT" duration-ms="1265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetQueueList_Support_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:22 WAT" name="Waiter" finished-at="2022-02-05T10:27:23 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:23 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:23 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetQueueList_Support_403()[pri:3, instance:Collection.GetQueueList_Support@4f5991f6]" started-at="2022-02-05T10:27:23 WAT" name="GetQueueList_Support_403" finished-at="2022-02-05T10:27:26 WAT" duration-ms="3398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetQueueList_Support_403 -->
      </class> <!-- Collection.GetQueueList_Support -->
    </test> <!-- Get Queue list support -->
    <test started-at="2022-02-05T10:27:27 WAT" name="Get service Paginated" finished-at="2022-02-05T10:27:37 WAT" duration-ms="10355">
      <class name="Collection.GetServicesPaginated">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:27 WAT" name="Waiter" finished-at="2022-02-05T10:27:27 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:27 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:27 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServicesPaginated_200()[pri:1, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:27 WAT" name="GetServicesPaginated_200" finished-at="2022-02-05T10:27:31 WAT" duration-ms="4194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServicesPaginated_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:31 WAT" name="Waiter" finished-at="2022-02-05T10:27:32 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetServicesPaginated_401()[pri:2, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:32 WAT" name="GetServicesPaginated_401" finished-at="2022-02-05T10:27:33 WAT" duration-ms="1482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServicesPaginated_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:32 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:32 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:33 WAT" name="Waiter" finished-at="2022-02-05T10:27:34 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:34 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:34 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServicesPaginated_403()[pri:3, instance:Collection.GetServicesPaginated@22f31dec]" started-at="2022-02-05T10:27:34 WAT" name="GetServicesPaginated_403" finished-at="2022-02-05T10:27:37 WAT" duration-ms="2905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServicesPaginated_403 -->
      </class> <!-- Collection.GetServicesPaginated -->
    </test> <!-- Get service Paginated -->
    <test started-at="2022-02-05T10:27:37 WAT" name="Get session archive" finished-at="2022-02-05T10:27:52 WAT" duration-ms="15346">
      <class name="Collection.GetSessionArchive">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:37 WAT" name="Waiter" finished-at="2022-02-05T10:27:38 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:38 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:38 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="GetIntent_200()[pri:1, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:38 WAT" name="GetIntent_200" finished-at="2022-02-05T10:27:42 WAT" duration-ms="4245" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.GetSessionArchive.GetIntent_200(GetSessionArchive.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIntent_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:42 WAT" name="Waiter" finished-at="2022-02-05T10:27:42 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetIntent_200()[pri:1, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:42 WAT" name="GetIntent_200" finished-at="2022-02-05T10:27:46 WAT" duration-ms="4002" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.GetSessionArchive.GetIntent_200(GetSessionArchive.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIntent_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:42 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:42 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:46 WAT" name="Waiter" finished-at="2022-02-05T10:27:47 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:47 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:47 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetIntent_401()[pri:2, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:47 WAT" name="GetIntent_401" finished-at="2022-02-05T10:27:48 WAT" duration-ms="1471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIntent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:49 WAT" name="Waiter" finished-at="2022-02-05T10:27:49 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:49 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetIntent_403()[pri:3, instance:Collection.GetSessionArchive@2c4d1ac]" started-at="2022-02-05T10:27:49 WAT" name="GetIntent_403" finished-at="2022-02-05T10:27:52 WAT" duration-ms="3283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIntent_403 -->
      </class> <!-- Collection.GetSessionArchive -->
    </test> <!-- Get session archive -->
    <test started-at="2022-02-05T10:27:53 WAT" name="Get settings by name" finished-at="2022-02-05T10:28:02 WAT" duration-ms="9936">
      <class name="Collection.GetSettingByName">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:27:53 WAT" name="Waiter" finished-at="2022-02-05T10:27:53 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:27:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSettingByName_200()[pri:1, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:27:53 WAT" name="GetSettingByName_200" finished-at="2022-02-05T10:27:57 WAT" duration-ms="3925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSettingByName_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:27:57 WAT" name="Waiter" finished-at="2022-02-05T10:27:57 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:27:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:27:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSettingByName_401()[pri:2, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:27:58 WAT" name="GetSettingByName_401" finished-at="2022-02-05T10:27:59 WAT" duration-ms="1477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSettingByName_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:27:59 WAT" name="Waiter" finished-at="2022-02-05T10:28:00 WAT" duration-ms="530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:28:00 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:00 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSettingByName_403()[pri:3, instance:Collection.GetSettingByName@2ef14fe]" started-at="2022-02-05T10:28:00 WAT" name="GetSettingByName_403" finished-at="2022-02-05T10:28:02 WAT" duration-ms="2831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSettingByName_403 -->
      </class> <!-- Collection.GetSettingByName -->
    </test> <!-- Get settings by name -->
    <test started-at="2022-02-05T10:28:03 WAT" name="Get subscriber" finished-at="2022-02-05T10:28:15 WAT" duration-ms="11985">
      <class name="Collection.GetSubscribers">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:03 WAT" name="Waiter" finished-at="2022-02-05T10:28:03 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:03 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:03 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSubscribers_200()[pri:1, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:03 WAT" name="GetSubscribers_200" finished-at="2022-02-05T10:28:08 WAT" duration-ms="5117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSubscribers_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:08 WAT" name="Waiter" finished-at="2022-02-05T10:28:09 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:09 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:09 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSubscribers_401()[pri:2, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:09 WAT" name="GetSubscribers_401" finished-at="2022-02-05T10:28:10 WAT" duration-ms="1241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSubscribers_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:10 WAT" name="Waiter" finished-at="2022-02-05T10:28:11 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:11 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:11 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSubscribers_403()[pri:3, instance:Collection.GetSubscribers@50d13246]" started-at="2022-02-05T10:28:11 WAT" name="GetSubscribers_403" finished-at="2022-02-05T10:28:15 WAT" duration-ms="3877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSubscribers_403 -->
      </class> <!-- Collection.GetSubscribers -->
    </test> <!-- Get subscriber -->
    <test started-at="2022-02-05T10:28:15 WAT" name="Get Template by Agent" finished-at="2022-02-05T10:28:26 WAT" duration-ms="11145">
      <class name="Collection.GetTemplateByAgent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:15 WAT" name="Waiter" finished-at="2022-02-05T10:28:15 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:15 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetTemplateByAgent_200()[pri:1, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:15 WAT" name="GetTemplateByAgent_200" finished-at="2022-02-05T10:28:19 WAT" duration-ms="4178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTemplateByAgent_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:19 WAT" name="Waiter" finished-at="2022-02-05T10:28:20 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:20 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:20 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetTemplateByAgent_401()[pri:2, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:20 WAT" name="GetTemplateByAgent_401" finished-at="2022-02-05T10:28:22 WAT" duration-ms="1628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTemplateByAgent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:22 WAT" name="Waiter" finished-at="2022-02-05T10:28:22 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetTemplateByAgent_403()[pri:3, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:22 WAT" name="GetTemplateByAgent_403" finished-at="2022-02-05T10:28:26 WAT" duration-ms="3580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTemplateByAgent_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetTemplateByAgent@49964d75]" started-at="2022-02-05T10:28:22 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:22 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.GetTemplateByAgent -->
    </test> <!-- Get Template by Agent -->
    <test started-at="2022-02-05T10:28:26 WAT" name="Get Training set intent" finished-at="2022-02-05T10:28:37 WAT" duration-ms="11008">
      <class name="Collection.GetTrainingSet_Intent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:26 WAT" name="Waiter" finished-at="2022-02-05T10:28:26 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:26 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:26 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetTrainingSet_Intent_200()[pri:1, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:26 WAT" name="GetTrainingSet_Intent_200" finished-at="2022-02-05T10:28:31 WAT" duration-ms="4838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTrainingSet_Intent_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:31 WAT" name="Waiter" finished-at="2022-02-05T10:28:32 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:32 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:32 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetTrainingSet_Intent_401()[pri:2, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:32 WAT" name="GetTrainingSet_Intent_401" finished-at="2022-02-05T10:28:34 WAT" duration-ms="1795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTrainingSet_Intent_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:34 WAT" name="Waiter" finished-at="2022-02-05T10:28:34 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:34 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:34 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetTrainingSet_Intent_403()[pri:3, instance:Collection.GetTrainingSet_Intent@7a1234bf]" started-at="2022-02-05T10:28:34 WAT" name="GetTrainingSet_Intent_403" finished-at="2022-02-05T10:28:37 WAT" duration-ms="2694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTrainingSet_Intent_403 -->
      </class> <!-- Collection.GetTrainingSet_Intent -->
    </test> <!-- Get Training set intent -->
    <test started-at="2022-02-05T10:28:37 WAT" name="Get User by latest message enrolled" finished-at="2022-02-05T10:28:57 WAT" duration-ms="20257">
      <class name="Collection.GetUser_By_Latest_Message_Enrolled">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:37 WAT" name="Waiter" finished-at="2022-02-05T10:28:38 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:38 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:38 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUser_By_Latest_Message_Enrolled_200()[pri:1, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:38 WAT" name="GetUser_By_Latest_Message_Enrolled_200" finished-at="2022-02-05T10:28:42 WAT" duration-ms="4697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Enrolled_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:42 WAT" name="Waiter" finished-at="2022-02-05T10:28:43 WAT" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:43 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:43 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUser_By_Latest_Message_Enrolled_401()[pri:2, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:43 WAT" name="GetUser_By_Latest_Message_Enrolled_401" finished-at="2022-02-05T10:28:44 WAT" duration-ms="1449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Enrolled_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:44 WAT" name="Waiter" finished-at="2022-02-05T10:28:45 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:45 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:45 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUser_By_Latest_Message_Enrolled_403()[pri:3, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:45 WAT" name="GetUser_By_Latest_Message_Enrolled_403" finished-at="2022-02-05T10:28:48 WAT" duration-ms="3089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Enrolled_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:48 WAT" name="Waiter" finished-at="2022-02-05T10:28:49 WAT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:49 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="GetUser_By_Latest_Message_Enrolled_404()[pri:4, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:49 WAT" name="GetUser_By_Latest_Message_Enrolled_404" finished-at="2022-02-05T10:28:53 WAT" duration-ms="3974" status="SKIP">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Collection.GetUser_By_Latest_Message_Enrolled.GetUser_By_Latest_Message_Enrolled_404(GetUser_By_Latest_Message_Enrolled.java:82)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Enrolled_404 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:53 WAT" name="Waiter" finished-at="2022-02-05T10:28:53 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUser_By_Latest_Message_Enrolled_404()[pri:4, instance:Collection.GetUser_By_Latest_Message_Enrolled@539d019]" started-at="2022-02-05T10:28:53 WAT" name="GetUser_By_Latest_Message_Enrolled_404" finished-at="2022-02-05T10:28:57 WAT" duration-ms="4129" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Collection.GetUser_By_Latest_Message_Enrolled.GetUser_By_Latest_Message_Enrolled_404(GetUser_By_Latest_Message_Enrolled.java:82)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Enrolled_404 -->
      </class> <!-- Collection.GetUser_By_Latest_Message_Enrolled -->
    </test> <!-- Get User by latest message enrolled -->
    <test started-at="2022-02-05T10:28:57 WAT" name="Get User info" finished-at="2022-02-05T10:29:13 WAT" duration-ms="15864">
      <class name="Collection.GetUserInfo">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:28:57 WAT" name="Waiter" finished-at="2022-02-05T10:28:58 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:28:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:28:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="GetUserInfo_200()[pri:1, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:28:58 WAT" name="GetUserInfo_200" finished-at="2022-02-05T10:29:02 WAT" duration-ms="4468" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.GetUserInfo.GetUserInfo_200(GetUserInfo.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserInfo_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:02 WAT" name="Waiter" finished-at="2022-02-05T10:29:03 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:03 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:03 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserInfo_200()[pri:1, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:03 WAT" name="GetUserInfo_200" finished-at="2022-02-05T10:29:07 WAT" duration-ms="3835" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.GetUserInfo.GetUserInfo_200(GetUserInfo.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserInfo_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:07 WAT" name="Waiter" finished-at="2022-02-05T10:29:07 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:07 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:07 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserInfo_401()[pri:2, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:07 WAT" name="GetUserInfo_401" finished-at="2022-02-05T10:29:09 WAT" duration-ms="1873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserInfo_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:09 WAT" name="Waiter" finished-at="2022-02-05T10:29:10 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:10 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:10 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserInfo_403()[pri:3, instance:Collection.GetUserInfo@5bf8fa12]" started-at="2022-02-05T10:29:10 WAT" name="GetUserInfo_403" finished-at="2022-02-05T10:29:13 WAT" duration-ms="3454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserInfo_403 -->
      </class> <!-- Collection.GetUserInfo -->
    </test> <!-- Get User info -->
    <test started-at="2022-02-05T10:29:13 WAT" name="Get User information client" finished-at="2022-02-05T10:29:24 WAT" duration-ms="10216">
      <class name="Collection.GetUserInformation_Client">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:13 WAT" name="Waiter" finished-at="2022-02-05T10:29:14 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:14 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:14 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserInformation_Client_200()[pri:1, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:14 WAT" name="GetUserInformation_Client_200" finished-at="2022-02-05T10:29:18 WAT" duration-ms="4094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserInformation_Client_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:18 WAT" name="Waiter" finished-at="2022-02-05T10:29:19 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetUserInformation_Client_401()[pri:2, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:19 WAT" name="GetUserInformation_Client_401" finished-at="2022-02-05T10:29:20 WAT" duration-ms="1479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserInformation_Client_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:19 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:19 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:20 WAT" name="Waiter" finished-at="2022-02-05T10:29:21 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:21 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:21 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserInformation_Client_403()[pri:3, instance:Collection.GetUserInformation_Client@6b88ca8c]" started-at="2022-02-05T10:29:21 WAT" name="GetUserInformation_Client_403" finished-at="2022-02-05T10:29:24 WAT" duration-ms="2981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserInformation_Client_403 -->
      </class> <!-- Collection.GetUserInformation_Client -->
    </test> <!-- Get User information client -->
    <test started-at="2022-02-05T10:29:24 WAT" name="Get User by latest message not enrolled" finished-at="2022-02-05T10:29:44 WAT" duration-ms="20273">
      <class name="Collection.GetUsers_By_Latest_Messages_Not_Enrolled">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:24 WAT" name="Waiter" finished-at="2022-02-05T10:29:24 WAT" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:24 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:24 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUser_By_Latest_Message_Not_Enrolled_200()[pri:1, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:24 WAT" name="GetUser_By_Latest_Message_Not_Enrolled_200" finished-at="2022-02-05T10:29:29 WAT" duration-ms="4653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Not_Enrolled_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:29 WAT" name="Waiter" finished-at="2022-02-05T10:29:29 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:29 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:29 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUser_By_Latest_Message_Not_Enrolled_401()[pri:2, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:29 WAT" name="GetUser_By_Latest_Message_Not_Enrolled_401" finished-at="2022-02-05T10:29:31 WAT" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Not_Enrolled_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:31 WAT" name="Waiter" finished-at="2022-02-05T10:29:31 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetUser_By_Latest_Message_Not_Enrolled_403()[pri:3, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:31 WAT" name="GetUser_By_Latest_Message_Not_Enrolled_403" finished-at="2022-02-05T10:29:34 WAT" duration-ms="2656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Not_Enrolled_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:31 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:31 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:34 WAT" name="Waiter" finished-at="2022-02-05T10:29:35 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:35 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:35 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="GetUser_By_Latest_Message_Not_Enrolled_404()[pri:4, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:35 WAT" name="GetUser_By_Latest_Message_Not_Enrolled_404" finished-at="2022-02-05T10:29:39 WAT" duration-ms="4556" status="SKIP">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Collection.GetUsers_By_Latest_Messages_Not_Enrolled.GetUser_By_Latest_Message_Not_Enrolled_404(GetUsers_By_Latest_Messages_Not_Enrolled.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Not_Enrolled_404 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:39 WAT" name="Waiter" finished-at="2022-02-05T10:29:40 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:40 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:40 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUser_By_Latest_Message_Not_Enrolled_404()[pri:4, instance:Collection.GetUsers_By_Latest_Messages_Not_Enrolled@21fd5faa]" started-at="2022-02-05T10:29:40 WAT" name="GetUser_By_Latest_Message_Not_Enrolled_404" finished-at="2022-02-05T10:29:44 WAT" duration-ms="4284" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Collection.GetUsers_By_Latest_Messages_Not_Enrolled.GetUser_By_Latest_Message_Not_Enrolled_404(GetUsers_By_Latest_Messages_Not_Enrolled.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUser_By_Latest_Message_Not_Enrolled_404 -->
      </class> <!-- Collection.GetUsers_By_Latest_Messages_Not_Enrolled -->
    </test> <!-- Get User by latest message not enrolled -->
    <test started-at="2022-02-05T10:29:44 WAT" name="Get user session message" finished-at="2022-02-05T10:30:00 WAT" duration-ms="15596">
      <class name="Collection.GetUserSession_Message">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:44 WAT" name="Waiter" finished-at="2022-02-05T10:29:45 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:45 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:45 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserSession_Message_200()[pri:1, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:45 WAT" name="GetUserSession_Message_200" finished-at="2022-02-05T10:29:49 WAT" duration-ms="4802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSession_Message_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:49 WAT" name="Waiter" finished-at="2022-02-05T10:29:50 WAT" duration-ms="530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:50 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:50 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserSession_Message_401()[pri:2, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:50 WAT" name="GetUserSession_Message_401" finished-at="2022-02-05T10:29:51 WAT" duration-ms="1444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSession_Message_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:52 WAT" name="Waiter" finished-at="2022-02-05T10:29:52 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:52 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:52 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserSession_Message_403()[pri:3, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:52 WAT" name="GetUserSession_Message_403" finished-at="2022-02-05T10:29:55 WAT" duration-ms="2679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSession_Message_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:55 WAT" name="Waiter" finished-at="2022-02-05T10:29:55 WAT" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="GetUserSession_Message_404()[pri:4, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:55 WAT" name="GetUserSession_Message_404" finished-at="2022-02-05T10:30:00 WAT" duration-ms="4386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSession_Message_404 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSession_Message@b7c4869]" started-at="2022-02-05T10:29:55 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:29:55 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.GetUserSession_Message -->
    </test> <!-- Get user session message -->
    <test started-at="2022-02-05T10:30:00 WAT" name="Get user session webhook" finished-at="2022-02-05T10:30:21 WAT" duration-ms="20699">
      <class name="Collection.GetUserSessionWebhook">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:00 WAT" name="Waiter" finished-at="2022-02-05T10:30:00 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:00 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:00 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserSessionWebhook_200()[pri:1, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:00 WAT" name="GetUserSessionWebhook_200" finished-at="2022-02-05T10:30:05 WAT" duration-ms="4709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSessionWebhook_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:05 WAT" name="Waiter" finished-at="2022-02-05T10:30:06 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:06 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:06 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserSessionWebhook_401()[pri:2, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:06 WAT" name="GetUserSessionWebhook_401" finished-at="2022-02-05T10:30:07 WAT" duration-ms="1336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSessionWebhook_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:07 WAT" name="Waiter" finished-at="2022-02-05T10:30:07 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:07 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:07 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserSessionWebhook_403()[pri:3, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:08 WAT" name="GetUserSessionWebhook_403" finished-at="2022-02-05T10:30:11 WAT" duration-ms="3730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSessionWebhook_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:11 WAT" name="Waiter" finished-at="2022-02-05T10:30:12 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:12 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:12 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="GetUserSessionWebhook_400()[pri:4, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:12 WAT" name="GetUserSessionWebhook_400" finished-at="2022-02-05T10:30:16 WAT" duration-ms="3863" status="SKIP">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Collection.GetUserSessionWebhook.GetUserSessionWebhook_400(GetUserSessionWebhook.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSessionWebhook_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:16 WAT" name="Waiter" finished-at="2022-02-05T10:30:16 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:16 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:16 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserSessionWebhook_400()[pri:4, instance:Collection.GetUserSessionWebhook@32a68f4f]" started-at="2022-02-05T10:30:16 WAT" name="GetUserSessionWebhook_400" finished-at="2022-02-05T10:30:20 WAT" duration-ms="4184" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Collection.GetUserSessionWebhook.GetUserSessionWebhook_400(GetUserSessionWebhook.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserSessionWebhook_400 -->
      </class> <!-- Collection.GetUserSessionWebhook -->
    </test> <!-- Get user session webhook -->
    <test started-at="2022-02-05T10:30:21 WAT" name="List Knowledge base" finished-at="2022-02-05T10:30:36 WAT" duration-ms="15100">
      <class name="Collection.List_KnowledgeBase">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:21 WAT" name="Waiter" finished-at="2022-02-05T10:30:21 WAT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:21 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:21 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="List_KnowledgeBase_200()[pri:1, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:21 WAT" name="List_KnowledgeBase_200" finished-at="2022-02-05T10:30:25 WAT" duration-ms="4168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- List_KnowledgeBase_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:25 WAT" name="Waiter" finished-at="2022-02-05T10:30:26 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:26 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:26 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="List_KnowledgeBase_401()[pri:2, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:26 WAT" name="List_KnowledgeBase_401" finished-at="2022-02-05T10:30:27 WAT" duration-ms="1464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- List_KnowledgeBase_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:27 WAT" name="Waiter" finished-at="2022-02-05T10:30:28 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:28 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:28 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="List_KnowledgeBase_403()[pri:3, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:28 WAT" name="List_KnowledgeBase_403" finished-at="2022-02-05T10:30:31 WAT" duration-ms="3259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- List_KnowledgeBase_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:31 WAT" name="Waiter" finished-at="2022-02-05T10:30:32 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:32 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:32 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="List_KnowledgeBase_400()[pri:4, instance:Collection.List_KnowledgeBase@7e6ef134]" started-at="2022-02-05T10:30:32 WAT" name="List_KnowledgeBase_400" finished-at="2022-02-05T10:30:36 WAT" duration-ms="3910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- List_KnowledgeBase_400 -->
      </class> <!-- Collection.List_KnowledgeBase -->
    </test> <!-- List Knowledge base -->
    <test started-at="2022-02-05T10:30:36 WAT" name="Message Reply" finished-at="2022-02-05T10:30:52 WAT" duration-ms="16604">
      <class name="Collection.MessageReply">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:36 WAT" name="Waiter" finished-at="2022-02-05T10:30:36 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:36 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:36 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="MessageReply_200()[pri:1, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:36 WAT" name="MessageReply_200" finished-at="2022-02-05T10:30:41 WAT" duration-ms="4777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MessageReply_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:41 WAT" name="Waiter" finished-at="2022-02-05T10:30:42 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:42 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:42 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="MessageReply_401()[pri:2, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:42 WAT" name="MessageReply_401" finished-at="2022-02-05T10:30:43 WAT" duration-ms="1673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MessageReply_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:43 WAT" name="Waiter" finished-at="2022-02-05T10:30:44 WAT" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:44 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:44 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="MessageReply_403()[pri:3, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:44 WAT" name="MessageReply_403" finished-at="2022-02-05T10:30:47 WAT" duration-ms="3064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MessageReply_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:47 WAT" name="Waiter" finished-at="2022-02-05T10:30:48 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:48 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:48 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="MessageReply_400()[pri:5, instance:Collection.MessageReply@2631f68c]" started-at="2022-02-05T10:30:48 WAT" name="MessageReply_400" finished-at="2022-02-05T10:30:52 WAT" duration-ms="4726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MessageReply_400 -->
      </class> <!-- Collection.MessageReply -->
    </test> <!-- Message Reply -->
    <test started-at="2022-02-05T10:30:53 WAT" name="Save Channel" finished-at="2022-02-05T10:31:02 WAT" duration-ms="9991">
      <class name="Collection.SaveChannel">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:53 WAT" name="Waiter" finished-at="2022-02-05T10:30:53 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SaveChannel_200()[pri:1, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:53 WAT" name="SaveChannel_200" finished-at="2022-02-05T10:30:57 WAT" duration-ms="3749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaveChannel_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:57 WAT" name="Waiter" finished-at="2022-02-05T10:30:57 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:57 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:57 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SaveChannel_401()[pri:2, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:57 WAT" name="SaveChannel_401" finished-at="2022-02-05T10:30:59 WAT" duration-ms="1576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaveChannel_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:59 WAT" name="Waiter" finished-at="2022-02-05T10:30:59 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:59 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:30:59 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SaveChannel_403()[pri:3, instance:Collection.SaveChannel@bcef303]" started-at="2022-02-05T10:30:59 WAT" name="SaveChannel_403" finished-at="2022-02-05T10:31:02 WAT" duration-ms="2994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaveChannel_403 -->
      </class> <!-- Collection.SaveChannel -->
    </test> <!-- Save Channel -->
    <test started-at="2022-02-05T10:31:03 WAT" name="Search failed response" finished-at="2022-02-05T10:31:14 WAT" duration-ms="11244">
      <class name="Collection.Search_Failed_Response">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:03 WAT" name="Waiter" finished-at="2022-02-05T10:31:03 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:03 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:03 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Failed_Response_200()[pri:1, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:03 WAT" name="Search_Failed_Response_200" finished-at="2022-02-05T10:31:08 WAT" duration-ms="4655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Failed_Response_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:08 WAT" name="Waiter" finished-at="2022-02-05T10:31:08 WAT" duration-ms="529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:08 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:08 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Failed_Response_401()[pri:2, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:08 WAT" name="Search_Failed_Response_401" finished-at="2022-02-05T10:31:10 WAT" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Failed_Response_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:10 WAT" name="Waiter" finished-at="2022-02-05T10:31:10 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:10 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:10 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Failed_Response_403()[pri:3, instance:Collection.Search_Failed_Response@7d1cfb8b]" started-at="2022-02-05T10:31:10 WAT" name="Search_Failed_Response_403" finished-at="2022-02-05T10:31:14 WAT" duration-ms="3573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Failed_Response_403 -->
      </class> <!-- Collection.Search_Failed_Response -->
    </test> <!-- Search failed response -->
    <test started-at="2022-02-05T10:31:14 WAT" name="Search service" finished-at="2022-02-05T10:31:24 WAT" duration-ms="10366">
      <class name="Collection.Search_Services">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:14 WAT" name="Waiter" finished-at="2022-02-05T10:31:14 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:15 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Services_200()[pri:1, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:15 WAT" name="Search_Services_200" finished-at="2022-02-05T10:31:19 WAT" duration-ms="4152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Services_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:19 WAT" name="Waiter" finished-at="2022-02-05T10:31:19 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="Search_Services_401()[pri:2, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:19 WAT" name="Search_Services_401" finished-at="2022-02-05T10:31:21 WAT" duration-ms="1409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Services_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:19 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:19 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:21 WAT" name="Waiter" finished-at="2022-02-05T10:31:21 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:21 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:21 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Search_Services_403()[pri:3, instance:Collection.Search_Services@7dda48d9]" started-at="2022-02-05T10:31:21 WAT" name="Search_Services_403" finished-at="2022-02-05T10:31:24 WAT" duration-ms="3105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Services_403 -->
      </class> <!-- Collection.Search_Services -->
    </test> <!-- Search service -->
    <test started-at="2022-02-05T10:31:24 WAT" name="Search Knowledge base" finished-at="2022-02-05T10:31:35 WAT" duration-ms="10662">
      <class name="Collection.SearchKnowledgeBase">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:24 WAT" name="Waiter" finished-at="2022-02-05T10:31:25 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:25 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:25 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SearchKnowledgeBase_200()[pri:1, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:25 WAT" name="SearchKnowledgeBase_200" finished-at="2022-02-05T10:31:29 WAT" duration-ms="4319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchKnowledgeBase_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:29 WAT" name="Waiter" finished-at="2022-02-05T10:31:30 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="SearchKnowledgeBase_401()[pri:2, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:30 WAT" name="SearchKnowledgeBase_401" finished-at="2022-02-05T10:31:31 WAT" duration-ms="1547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchKnowledgeBase_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:30 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:30 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:31 WAT" name="Waiter" finished-at="2022-02-05T10:31:32 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:32 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:32 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SearchUser_403()[pri:3, instance:Collection.SearchKnowledgeBase@53de625d]" started-at="2022-02-05T10:31:32 WAT" name="SearchUser_403" finished-at="2022-02-05T10:31:35 WAT" duration-ms="3065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchUser_403 -->
      </class> <!-- Collection.SearchKnowledgeBase -->
    </test> <!-- Search Knowledge base -->
    <test started-at="2022-02-05T10:31:35 WAT" name="Search User" finished-at="2022-02-05T10:31:46 WAT" duration-ms="11054">
      <class name="Collection.SearchUser">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:35 WAT" name="Waiter" finished-at="2022-02-05T10:31:36 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:36 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:36 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SearchUser_200()[pri:1, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:36 WAT" name="SearchUser_200" finished-at="2022-02-05T10:31:40 WAT" duration-ms="4566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchUser_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:40 WAT" name="Waiter" finished-at="2022-02-05T10:31:41 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:41 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:41 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SearchUser_401()[pri:2, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:41 WAT" name="SearchUser_401" finished-at="2022-02-05T10:31:42 WAT" duration-ms="1460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchUser_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:42 WAT" name="Waiter" finished-at="2022-02-05T10:31:43 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="SearchUser_403()[pri:3, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:43 WAT" name="SearchUser_403" finished-at="2022-02-05T10:31:46 WAT" duration-ms="3287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchUser_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SearchUser@1fde5d22]" started-at="2022-02-05T10:31:43 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:43 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.SearchUser -->
    </test> <!-- Search User -->
    <test started-at="2022-02-05T10:31:46 WAT" name="Send Message Support" finished-at="2022-02-05T10:32:06 WAT" duration-ms="19700">
      <class name="Collection.Send_Message_Support">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:46 WAT" name="Waiter" finished-at="2022-02-05T10:31:47 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method retried="true" signature="Send_Message_Support_200()[pri:1, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:47 WAT" name="Send_Message_Support_200" finished-at="2022-02-05T10:31:51 WAT" duration-ms="4147" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Send_Message_Support.Send_Message_Support_200(Send_Message_Support.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Send_Message_Support_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:47 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:47 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:51 WAT" name="Waiter" finished-at="2022-02-05T10:31:52 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:52 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:52 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Send_Message_Support_200()[pri:1, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:52 WAT" name="Send_Message_Support_200" finished-at="2022-02-05T10:31:56 WAT" duration-ms="4007" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 3 expectations failed.
Expected status code <200> but was <404>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 404 Not Found".

Expected content-type "JSON" doesn't match actual content-type "text/html; charset=utf-8".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.Send_Message_Support.Send_Message_Support_200(Send_Message_Support.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Send_Message_Support_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:56 WAT" name="Waiter" finished-at="2022-02-05T10:31:56 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:56 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:56 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Send_Message_Support_401()[pri:2, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:56 WAT" name="Send_Message_Support_401" finished-at="2022-02-05T10:31:58 WAT" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Send_Message_Support_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:58 WAT" name="Waiter" finished-at="2022-02-05T10:31:58 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:31:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Send_Message_Support_403()[pri:3, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:31:58 WAT" name="Send_Message_Support_403" finished-at="2022-02-05T10:32:01 WAT" duration-ms="3314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Send_Message_Support_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:32:01 WAT" name="Waiter" finished-at="2022-02-05T10:32:02 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:32:02 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:02 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Send_Message_Support_404()[pri:4, instance:Collection.Send_Message_Support@561868a0]" started-at="2022-02-05T10:32:02 WAT" name="Send_Message_Support_404" finished-at="2022-02-05T10:32:06 WAT" duration-ms="4076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Send_Message_Support_404 -->
      </class> <!-- Collection.Send_Message_Support -->
    </test> <!-- Send Message Support -->
    <test started-at="2022-02-05T10:32:06 WAT" name="Send Single Notification Chat" finished-at="2022-02-05T10:32:06 WAT" duration-ms="0">
    </test> <!-- Send Single Notification Chat -->
    <test started-at="2022-02-05T10:32:06 WAT" name="Send Notification" finished-at="2022-02-05T10:32:22 WAT" duration-ms="15333">
      <class name="Collection.SendNotification">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:06 WAT" name="Waiter" finished-at="2022-02-05T10:32:07 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:07 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:07 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendNotification_200()[pri:1, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:07 WAT" name="SendNotification_200" finished-at="2022-02-05T10:32:11 WAT" duration-ms="4208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendNotification_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:11 WAT" name="Waiter" finished-at="2022-02-05T10:32:12 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="SendNotification_401()[pri:2, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:12 WAT" name="SendNotification_401" finished-at="2022-02-05T10:32:13 WAT" duration-ms="1903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendNotification_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:12 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:12 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:14 WAT" name="Waiter" finished-at="2022-02-05T10:32:14 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:14 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:14 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendNotification_403()[pri:3, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:14 WAT" name="SendNotification_403" finished-at="2022-02-05T10:32:17 WAT" duration-ms="2813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendNotification_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:17 WAT" name="Waiter" finished-at="2022-02-05T10:32:17 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="SendNotification_400()[pri:5, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:17 WAT" name="SendNotification_400" finished-at="2022-02-05T10:32:22 WAT" duration-ms="4158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendNotification_400 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendNotification@25aca718]" started-at="2022-02-05T10:32:17 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:17 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.SendNotification -->
    </test> <!-- Send Notification -->
    <test started-at="2022-02-05T10:32:22 WAT" name="Send Template image" finished-at="2022-02-05T10:32:37 WAT" duration-ms="15177">
      <class name="Collection.SendTemplateImage">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:22 WAT" name="Waiter" finished-at="2022-02-05T10:32:22 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:22 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:22 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateImage_200()[pri:1, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:22 WAT" name="SendTemplateImage_200" finished-at="2022-02-05T10:32:26 WAT" duration-ms="4138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateImage_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:26 WAT" name="Waiter" finished-at="2022-02-05T10:32:27 WAT" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="SendTemplateImage_401()[pri:2, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:27 WAT" name="SendTemplateImage_401" finished-at="2022-02-05T10:32:28 WAT" duration-ms="1503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateImage_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:27 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:27 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:28 WAT" name="Waiter" finished-at="2022-02-05T10:32:29 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:29 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:29 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateImage_403()[pri:3, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:29 WAT" name="SendTemplateImage_403" finished-at="2022-02-05T10:32:32 WAT" duration-ms="3355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateImage_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:32 WAT" name="Waiter" finished-at="2022-02-05T10:32:33 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:33 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:33 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateImage_400()[pri:5, instance:Collection.SendTemplateImage@2f1de2d6]" started-at="2022-02-05T10:32:33 WAT" name="SendTemplateImage_400" finished-at="2022-02-05T10:32:37 WAT" duration-ms="3996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateImage_400 -->
      </class> <!-- Collection.SendTemplateImage -->
    </test> <!-- Send Template image -->
    <test started-at="2022-02-05T10:32:37 WAT" name="Send Template message Image" finished-at="2022-02-05T10:32:52 WAT" duration-ms="15283">
      <class name="Collection.SendTemplateMessage_TemplateID">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:37 WAT" name="Waiter" finished-at="2022-02-05T10:32:37 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:38 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:38 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessage_TemplateID_200()[pri:1, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:38 WAT" name="SendTemplateMessage_TemplateID_200" finished-at="2022-02-05T10:32:42 WAT" duration-ms="4209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessage_TemplateID_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:42 WAT" name="Waiter" finished-at="2022-02-05T10:32:42 WAT" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:42 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:42 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessage_TemplateID_401()[pri:2, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:42 WAT" name="SendTemplateMessage_TemplateID_401" finished-at="2022-02-05T10:32:44 WAT" duration-ms="1403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessage_TemplateID_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:44 WAT" name="Waiter" finished-at="2022-02-05T10:32:44 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:44 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:44 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessage_TemplateID_403()[pri:3, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:44 WAT" name="SendTemplateMessage_TemplateID_403" finished-at="2022-02-05T10:32:47 WAT" duration-ms="3152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessage_TemplateID_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:47 WAT" name="Waiter" finished-at="2022-02-05T10:32:48 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:48 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:48 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessage_TemplateID_400()[pri:5, instance:Collection.SendTemplateMessage_TemplateID@503ecb24]" started-at="2022-02-05T10:32:48 WAT" name="SendTemplateMessage_TemplateID_400" finished-at="2022-02-05T10:32:52 WAT" duration-ms="4246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessage_TemplateID_400 -->
      </class> <!-- Collection.SendTemplateMessage_TemplateID -->
    </test> <!-- Send Template message Image -->
    <test started-at="2022-02-05T10:32:52 WAT" name="Send Template message Text" finished-at="2022-02-05T10:33:03 WAT" duration-ms="10915">
      <class name="Collection.SendTemplateMessageInteractiveText">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:32:52 WAT" name="Waiter" finished-at="2022-02-05T10:32:53 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:32:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessageInteractiveText_200()[pri:1, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:32:53 WAT" name="SendTemplateMessageInteractiveText_200" finished-at="2022-02-05T10:32:57 WAT" duration-ms="4338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessageInteractiveText_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:32:57 WAT" name="Waiter" finished-at="2022-02-05T10:32:58 WAT" duration-ms="523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:32:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:32:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessageInteractiveText_401()[pri:2, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:32:58 WAT" name="SendTemplateMessageInteractiveText_401" finished-at="2022-02-05T10:32:59 WAT" duration-ms="1559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessageInteractiveText_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:32:59 WAT" name="Waiter" finished-at="2022-02-05T10:33:00 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="SendTemplateMessageInteractiveText_403()[pri:3, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:33:00 WAT" name="SendTemplateMessageInteractiveText_403" finished-at="2022-02-05T10:33:03 WAT" duration-ms="3297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessageInteractiveText_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessageInteractiveText@5b1ebf56]" started-at="2022-02-05T10:33:00 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:00 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.SendTemplateMessageInteractiveText -->
    </test> <!-- Send Template message Text -->
    <test started-at="2022-02-05T10:33:04 WAT" name="Send Template message Only" finished-at="2022-02-05T10:33:19 WAT" duration-ms="15636">
      <class name="Collection.SendTemplateMessageOnly">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:04 WAT" name="Waiter" finished-at="2022-02-05T10:33:04 WAT" duration-ms="528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="SendTemplateMessageOnly_200()[pri:1, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:04 WAT" name="SendTemplateMessageOnly_200" finished-at="2022-02-05T10:33:08 WAT" duration-ms="4356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessageOnly_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:04 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:04 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:08 WAT" name="Waiter" finished-at="2022-02-05T10:33:09 WAT" duration-ms="525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:09 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:09 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessageOnly_401()[pri:2, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:09 WAT" name="SendTemplateMessageOnly_401" finished-at="2022-02-05T10:33:11 WAT" duration-ms="1874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessageOnly_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:11 WAT" name="Waiter" finished-at="2022-02-05T10:33:11 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:11 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:11 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessageOnly_403()[pri:3, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:12 WAT" name="SendTemplateMessageOnly_403" finished-at="2022-02-05T10:33:15 WAT" duration-ms="3194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessageOnly_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:15 WAT" name="Waiter" finished-at="2022-02-05T10:33:15 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:15 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:15 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendTemplateMessageOnly_400()[pri:5, instance:Collection.SendTemplateMessageOnly@74bada02]" started-at="2022-02-05T10:33:15 WAT" name="SendTemplateMessageOnly_400" finished-at="2022-02-05T10:33:19 WAT" duration-ms="3843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendTemplateMessageOnly_400 -->
      </class> <!-- Collection.SendTemplateMessageOnly -->
    </test> <!-- Send Template message Only -->
    <test started-at="2022-02-05T10:33:19 WAT" name="SetUp Template" finished-at="2022-02-05T10:33:37 WAT" duration-ms="17533">
      <class name="Collection.SetUp_Template">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:19 WAT" name="Waiter" finished-at="2022-02-05T10:33:20 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:20 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:20 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SetUp_Template_200()[pri:1, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:20 WAT" name="SetUp_Template_200" finished-at="2022-02-05T10:33:26 WAT" duration-ms="6368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp_Template_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:26 WAT" name="Waiter" finished-at="2022-02-05T10:33:27 WAT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:27 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:27 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SetUp_Template_401()[pri:2, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:27 WAT" name="SetUp_Template_401" finished-at="2022-02-05T10:33:28 WAT" duration-ms="1570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp_Template_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:28 WAT" name="Waiter" finished-at="2022-02-05T10:33:29 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:29 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:29 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SetUp_Template_403()[pri:3, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:29 WAT" name="SetUp_Template_403" finished-at="2022-02-05T10:33:32 WAT" duration-ms="3430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp_Template_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:32 WAT" name="Waiter" finished-at="2022-02-05T10:33:33 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:33 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:33 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SetUp_Template_400()[pri:5, instance:Collection.SetUp_Template@4748a0f9]" started-at="2022-02-05T10:33:33 WAT" name="SetUp_Template_400" finished-at="2022-02-05T10:33:37 WAT" duration-ms="3841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp_Template_400 -->
      </class> <!-- Collection.SetUp_Template -->
    </test> <!-- SetUp Template -->
    <test started-at="2022-02-05T10:33:37 WAT" name="Trigger Intent" finished-at="2022-02-05T10:33:52 WAT" duration-ms="15436">
      <class name="Collection.TriggerIntent">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:37 WAT" name="Waiter" finished-at="2022-02-05T10:33:37 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="TriggerIntent_200()[pri:1, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:37 WAT" name="TriggerIntent_200" finished-at="2022-02-05T10:33:42 WAT" duration-ms="4216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:37 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:37 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:42 WAT" name="Waiter" finished-at="2022-02-05T10:33:42 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="TriggerIntent_401()[pri:2, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:42 WAT" name="TriggerIntent_401" finished-at="2022-02-05T10:33:44 WAT" duration-ms="1602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:42 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:42 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:44 WAT" name="Waiter" finished-at="2022-02-05T10:33:44 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:44 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:44 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="TriggerIntent_403()[pri:3, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:44 WAT" name="TriggerIntent_403" finished-at="2022-02-05T10:33:48 WAT" duration-ms="3284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:48 WAT" name="Waiter" finished-at="2022-02-05T10:33:48 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="TriggerIntent_400()[pri:5, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:48 WAT" name="TriggerIntent_400" finished-at="2022-02-05T10:33:52 WAT" duration-ms="4030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_400 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent@421bba99]" started-at="2022-02-05T10:33:48 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:48 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.TriggerIntent -->
    </test> <!-- Trigger Intent -->
    <test started-at="2022-02-05T10:33:52 WAT" name="Trigger Intent Client" finished-at="2022-02-05T10:34:33 WAT" duration-ms="40977">
      <class name="Collection.TriggerIntent_Client">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:33:52 WAT" name="Waiter" finished-at="2022-02-05T10:33:53 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:33:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="TriggerIntent_Client_200()[pri:1, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:33:53 WAT" name="TriggerIntent_Client_200" finished-at="2022-02-05T10:33:57 WAT" duration-ms="3908" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.TriggerIntent_Client.TriggerIntent_Client_200(TriggerIntent_Client.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_Client_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:33:57 WAT" name="Waiter" finished-at="2022-02-05T10:33:58 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:33:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:33:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="TriggerIntent_Client_200()[pri:1, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:33:58 WAT" name="TriggerIntent_Client_200" finished-at="2022-02-05T10:34:22 WAT" duration-ms="24630" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.TriggerIntent_Client.TriggerIntent_Client_200(TriggerIntent_Client.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_Client_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:22 WAT" name="Waiter" finished-at="2022-02-05T10:34:23 WAT" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:23 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:23 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="TriggerIntent_Client_401()[pri:2, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:23 WAT" name="TriggerIntent_Client_401" finished-at="2022-02-05T10:34:24 WAT" duration-ms="1655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_Client_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:24 WAT" name="Waiter" finished-at="2022-02-05T10:34:25 WAT" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:25 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:25 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="TriggerIntent_Client_403()[pri:3, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:25 WAT" name="TriggerIntent_Client_403" finished-at="2022-02-05T10:34:29 WAT" duration-ms="3644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_Client_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:29 WAT" name="Waiter" finished-at="2022-02-05T10:34:29 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="TriggerIntent_Client_400()[pri:5, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:29 WAT" name="TriggerIntent_Client_400" finished-at="2022-02-05T10:34:33 WAT" duration-ms="4273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerIntent_Client_400 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.TriggerIntent_Client@7862f56]" started-at="2022-02-05T10:34:29 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:29 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
      </class> <!-- Collection.TriggerIntent_Client -->
    </test> <!-- Trigger Intent Client -->
    <test started-at="2022-02-05T10:34:34 WAT" name="Update No message" finished-at="2022-02-05T10:34:44 WAT" duration-ms="10638">
      <class name="Collection.UpdateNoMessage">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:34 WAT" name="Waiter" finished-at="2022-02-05T10:34:34 WAT" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:34 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:34 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateNoMessage_200()[pri:1, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:34 WAT" name="UpdateNoMessage_200" finished-at="2022-02-05T10:34:38 WAT" duration-ms="4293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNoMessage_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:38 WAT" name="Waiter" finished-at="2022-02-05T10:34:39 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:39 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:39 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateNoMessage_401()[pri:2, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:39 WAT" name="UpdateNoMessage_401" finished-at="2022-02-05T10:34:40 WAT" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNoMessage_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:40 WAT" name="Waiter" finished-at="2022-02-05T10:34:41 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:41 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:41 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateNoMessage_403()[pri:3, instance:Collection.UpdateNoMessage@4982cc36]" started-at="2022-02-05T10:34:41 WAT" name="UpdateNoMessage_403" finished-at="2022-02-05T10:34:44 WAT" duration-ms="3329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNoMessage_403 -->
      </class> <!-- Collection.UpdateNoMessage -->
    </test> <!-- Update No message -->
    <test started-at="2022-02-05T10:34:44 WAT" name="Update User Archive" finished-at="2022-02-05T10:35:02 WAT" duration-ms="17853">
      <class name="Collection.UpdateUserArchive">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:44 WAT" name="Waiter" finished-at="2022-02-05T10:34:45 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:45 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:45 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="UpdateUserArchive_200()[pri:1, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:45 WAT" name="UpdateUserArchive_200" finished-at="2022-02-05T10:34:49 WAT" duration-ms="3801" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.UpdateUserArchive.UpdateUserArchive_200(UpdateUserArchive.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUserArchive_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:49 WAT" name="Waiter" finished-at="2022-02-05T10:34:49 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:49 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateUserArchive_200()[pri:1, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:49 WAT" name="UpdateUserArchive_200" finished-at="2022-02-05T10:34:53 WAT" duration-ms="3663" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <200> but was <400>.

Expected status line "HTTP/1.1 200 OK" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.UpdateUserArchive.UpdateUserArchive_200(UpdateUserArchive.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUserArchive_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:53 WAT" name="Waiter" finished-at="2022-02-05T10:34:53 WAT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:53 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateUserArchive_401()[pri:2, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:53 WAT" name="UpdateUserArchive_401" finished-at="2022-02-05T10:34:55 WAT" duration-ms="1225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUserArchive_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:55 WAT" name="Waiter" finished-at="2022-02-05T10:34:55 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="UpdateUserArchive_403()[pri:3, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:55 WAT" name="UpdateUserArchive_403" finished-at="2022-02-05T10:34:58 WAT" duration-ms="2740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUserArchive_403 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:55 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:55 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:58 WAT" name="Waiter" finished-at="2022-02-05T10:34:58 WAT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:34:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateUserArchive_400()[pri:5, instance:Collection.UpdateUserArchive@3f270e0a]" started-at="2022-02-05T10:34:59 WAT" name="UpdateUserArchive_400" finished-at="2022-02-05T10:35:02 WAT" duration-ms="3593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUserArchive_400 -->
      </class> <!-- Collection.UpdateUserArchive -->
    </test> <!-- Update User Archive -->
    <test started-at="2022-02-05T10:35:02 WAT" name="User message by session support" finished-at="2022-02-05T10:35:14 WAT" duration-ms="11557">
      <class name="Collection.User_Message_by_Session_Support">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:02 WAT" name="Waiter" finished-at="2022-02-05T10:35:03 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:03 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:03 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="User_Message_by_Session_Support_200()[pri:1, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:03 WAT" name="User_Message_by_Session_Support_200" finished-at="2022-02-05T10:35:08 WAT" duration-ms="4742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Message_by_Session_Support_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:08 WAT" name="Waiter" finished-at="2022-02-05T10:35:08 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:08 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:08 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="User_Message_by_Session_Support_401()[pri:2, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:08 WAT" name="User_Message_by_Session_Support_401" finished-at="2022-02-05T10:35:10 WAT" duration-ms="1767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Message_by_Session_Support_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:10 WAT" name="Waiter" finished-at="2022-02-05T10:35:10 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:10 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:10 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="User_Message_by_Session_Support_403()[pri:3, instance:Collection.User_Message_by_Session_Support@253d9f73]" started-at="2022-02-05T10:35:10 WAT" name="User_Message_by_Session_Support_403" finished-at="2022-02-05T10:35:14 WAT" duration-ms="3354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Message_by_Session_Support_403 -->
      </class> <!-- Collection.User_Message_by_Session_Support -->
    </test> <!-- User message by session support -->
    <test started-at="2022-02-05T10:35:14 WAT" name="User message by session bot" finished-at="2022-02-05T10:35:25 WAT" duration-ms="11229">
      <class name="Collection.User_Messages_by_Session_bot">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:14 WAT" name="Waiter" finished-at="2022-02-05T10:35:14 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="User_Messages_bot_200()[pri:1, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:14 WAT" name="User_Messages_bot_200" finished-at="2022-02-05T10:35:20 WAT" duration-ms="5250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Messages_bot_200 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:14 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:14 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:20 WAT" name="Waiter" finished-at="2022-02-05T10:35:20 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:20 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:20 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="User_Messages_bot_401()[pri:2, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:20 WAT" name="User_Messages_bot_401" finished-at="2022-02-05T10:35:22 WAT" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Messages_bot_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:22 WAT" name="Waiter" finished-at="2022-02-05T10:35:22 WAT" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:22 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:22 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="User_Messages_bot_403()[pri:3, instance:Collection.User_Messages_by_Session_bot@5dd1c9f2]" started-at="2022-02-05T10:35:22 WAT" name="User_Messages_bot_403" finished-at="2022-02-05T10:35:25 WAT" duration-ms="2899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Messages_bot_403 -->
      </class> <!-- Collection.User_Messages_by_Session_bot -->
    </test> <!-- User message by session bot -->
    <test started-at="2022-02-05T10:35:25 WAT" name="Webchat message History" finished-at="2022-02-05T10:35:46 WAT" duration-ms="20234">
      <class name="Collection.WebChatMessageHistory">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:25 WAT" name="Waiter" finished-at="2022-02-05T10:35:26 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:26 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:26 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WebChatMessageHistory_200()[pri:1, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:26 WAT" name="WebChatMessageHistory_200" finished-at="2022-02-05T10:35:31 WAT" duration-ms="4867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebChatMessageHistory_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:31 WAT" name="Waiter" finished-at="2022-02-05T10:35:31 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method signature="WebChatMessageHistory_401()[pri:2, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:31 WAT" name="WebChatMessageHistory_401" finished-at="2022-02-05T10:35:33 WAT" duration-ms="1389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebChatMessageHistory_401 -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:31 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:31 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:33 WAT" name="Waiter" finished-at="2022-02-05T10:35:33 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:33 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:33 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SetUp_WebChatMessageHistory_403()[pri:3, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:33 WAT" name="SetUp_WebChatMessageHistory_403" finished-at="2022-02-05T10:35:36 WAT" duration-ms="3026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp_WebChatMessageHistory_403 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:36 WAT" name="Waiter" finished-at="2022-02-05T10:35:37 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:37 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:37 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="WebChatMessageHistory_400()[pri:5, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:37 WAT" name="WebChatMessageHistory_400" finished-at="2022-02-05T10:35:41 WAT" duration-ms="3859" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.WebChatMessageHistory.WebChatMessageHistory_400(WebChatMessageHistory.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebChatMessageHistory_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:41 WAT" name="Waiter" finished-at="2022-02-05T10:35:41 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:41 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:41 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WebChatMessageHistory_400()[pri:5, instance:Collection.WebChatMessageHistory@46944ca9]" started-at="2022-02-05T10:35:41 WAT" name="WebChatMessageHistory_400" finished-at="2022-02-05T10:35:45 WAT" duration-ms="4196" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <400> but was <500>.

Expected status line "HTTP/1.1 400 Bad Request" doesn't match actual status line "HTTP/1.1 500 Internal Server Error".

at java.base/jdk.internal.reflect.GeneratedConstructorAccessor96.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Collection.WebChatMessageHistory.WebChatMessageHistory_400(WebChatMessageHistory.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebChatMessageHistory_400 -->
      </class> <!-- Collection.WebChatMessageHistory -->
    </test> <!-- Webchat message History -->
    <test started-at="2022-02-05T10:35:46 WAT" name="WhatApp opt in" finished-at="2022-02-05T10:35:57 WAT" duration-ms="11471">
      <class name="Collection.WhatApp_OptIn">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:46 WAT" name="Waiter" finished-at="2022-02-05T10:35:46 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:46 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:46 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WhatApp_OptIn_200()[pri:1, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:46 WAT" name="WhatApp_OptIn_200" finished-at="2022-02-05T10:35:52 WAT" duration-ms="5386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WhatApp_OptIn_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:52 WAT" name="Waiter" finished-at="2022-02-05T10:35:52 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:52 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:52 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WhatApp_OptIn_401()[pri:2, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:52 WAT" name="WhatApp_OptIn_401" finished-at="2022-02-05T10:35:53 WAT" duration-ms="1171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WhatApp_OptIn_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:53 WAT" name="Waiter" finished-at="2022-02-05T10:35:54 WAT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:54 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:54 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WhatApp_OptIn_403()[pri:3, instance:Collection.WhatApp_OptIn@32f232a5]" started-at="2022-02-05T10:35:54 WAT" name="WhatApp_OptIn_403" finished-at="2022-02-05T10:35:57 WAT" duration-ms="3126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WhatApp_OptIn_403 -->
      </class> <!-- Collection.WhatApp_OptIn -->
    </test> <!-- WhatApp opt in -->
    <test started-at="2022-02-05T10:35:57 WAT" name="WhatApp Opt Out" finished-at="2022-02-05T10:36:09 WAT" duration-ms="12012">
      <class name="Collection.WhatApp_OptOut">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:35:57 WAT" name="Waiter" finished-at="2022-02-05T10:35:58 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:35:58 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:35:58 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WhatApp_OptOut_200()[pri:1, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:35:58 WAT" name="WhatApp_OptOut_200" finished-at="2022-02-05T10:36:03 WAT" duration-ms="4892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WhatApp_OptOut_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:36:03 WAT" name="Waiter" finished-at="2022-02-05T10:36:03 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:36:03 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:36:03 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WhatApp_OptOut_401()[pri:2, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:36:03 WAT" name="WhatApp_OptOut_401" finished-at="2022-02-05T10:36:05 WAT" duration-ms="1686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WhatApp_OptOut_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:36:05 WAT" name="Waiter" finished-at="2022-02-05T10:36:06 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:36:06 WAT" name="setUpConfiguration" finished-at="2022-02-05T10:36:06 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="WhatApp_OptOut_403()[pri:3, instance:Collection.WhatApp_OptOut@530712d]" started-at="2022-02-05T10:36:06 WAT" name="WhatApp_OptOut_403" finished-at="2022-02-05T10:36:09 WAT" duration-ms="3626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WhatApp_OptOut_403 -->
      </class> <!-- Collection.WhatApp_OptOut -->
    </test> <!-- WhatApp Opt Out -->
  </suite> <!-- Messenger Backend API Test -->
</testng-results>
