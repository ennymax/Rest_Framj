<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="7" ignored="0" total="141" passed="127" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-17T11:24:38 WAT" name="Ebanqo Main BackEnd" finished-at="2022-01-17T11:34:16 WAT" duration-ms="577809">
    <groups>
    </groups>
    <test started-at="2022-01-17T11:24:38 WAT" name="Get Category List" finished-at="2022-01-17T11:24:55 WAT" duration-ms="16811">
      <class name="StakeHolder.GetCategoryList">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetCategoryList@58594a11]" started-at="2022-01-17T11:24:38 WAT" name="Waiter" finished-at="2022-01-17T11:24:39 WAT" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetCategoryList@58594a11]" started-at="2022-01-17T11:24:39 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:24:40 WAT" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetCategoryList_401()[pri:1, instance:StakeHolder.GetCategoryList@58594a11]" started-at="2022-01-17T11:24:40 WAT" name="GetCategoryList_401" finished-at="2022-01-17T11:24:45 WAT" duration-ms="5345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCategoryList_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetCategoryList@58594a11]" started-at="2022-01-17T11:24:45 WAT" name="Waiter" finished-at="2022-01-17T11:24:45 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetCategoryList@58594a11]" started-at="2022-01-17T11:24:45 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:24:45 WAT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetCategoryList_200()[pri:2, instance:StakeHolder.GetCategoryList@58594a11]" started-at="2022-01-17T11:24:45 WAT" name="GetCategoryList_200" finished-at="2022-01-17T11:24:55 WAT" duration-ms="9617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCategoryList_200 -->
      </class> <!-- StakeHolder.GetCategoryList -->
    </test> <!-- Get Category List -->
    <test started-at="2022-01-17T11:24:55 WAT" name="Delete Role" finished-at="2022-01-17T11:25:03 WAT" duration-ms="7712">
      <class name="Role.DeleteRole">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.DeleteRole@3b8f0a79]" started-at="2022-01-17T11:24:55 WAT" name="Waiter" finished-at="2022-01-17T11:24:56 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.DeleteRole@3b8f0a79]" started-at="2022-01-17T11:24:56 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:24:56 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DeleteRole_401()[pri:2, instance:Role.DeleteRole@3b8f0a79]" started-at="2022-01-17T11:24:56 WAT" name="DeleteRole_401" finished-at="2022-01-17T11:24:57 WAT" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteRole_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.DeleteRole@3b8f0a79]" started-at="2022-01-17T11:24:57 WAT" name="Waiter" finished-at="2022-01-17T11:24:58 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.DeleteRole@3b8f0a79]" started-at="2022-01-17T11:24:58 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:24:58 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="DeleteRole_404()[pri:3, instance:Role.DeleteRole@3b8f0a79]" started-at="2022-01-17T11:24:58 WAT" name="DeleteRole_404" finished-at="2022-01-17T11:25:03 WAT" duration-ms="5282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteRole_404 -->
      </class> <!-- Role.DeleteRole -->
    </test> <!-- Delete Role -->
    <test started-at="2022-01-17T11:25:03 WAT" name="Get DropDown List" finished-at="2022-01-17T11:25:09 WAT" duration-ms="6154">
      <class name="StakeHolder.GetDropDownList">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetDropDownList@44c73c26]" started-at="2022-01-17T11:25:03 WAT" name="Waiter" finished-at="2022-01-17T11:25:04 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetDropDownList@44c73c26]" started-at="2022-01-17T11:25:04 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:04 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDropDownList_401()[pri:1, instance:StakeHolder.GetDropDownList@44c73c26]" started-at="2022-01-17T11:25:04 WAT" name="GetDropDownList_401" finished-at="2022-01-17T11:25:05 WAT" duration-ms="1251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDropDownList_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetDropDownList@44c73c26]" started-at="2022-01-17T11:25:05 WAT" name="Waiter" finished-at="2022-01-17T11:25:05 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetDropDownList@44c73c26]" started-at="2022-01-17T11:25:05 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:05 WAT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDropDownList_200()[pri:2, instance:StakeHolder.GetDropDownList@44c73c26]" started-at="2022-01-17T11:25:05 WAT" name="GetDropDownList_200" finished-at="2022-01-17T11:25:09 WAT" duration-ms="3820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDropDownList_200 -->
      </class> <!-- StakeHolder.GetDropDownList -->
    </test> <!-- Get DropDown List -->
    <test started-at="2022-01-17T11:25:09 WAT" name="Get Sample List" finished-at="2022-01-17T11:25:17 WAT" duration-ms="7155">
      <class name="StakeHolder.GetSampleList">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetSampleList@3561c410]" started-at="2022-01-17T11:25:09 WAT" name="Waiter" finished-at="2022-01-17T11:25:10 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetSampleList@3561c410]" started-at="2022-01-17T11:25:10 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:10 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSampleList_401()[pri:1, instance:StakeHolder.GetSampleList@3561c410]" started-at="2022-01-17T11:25:10 WAT" name="GetSampleList_401" finished-at="2022-01-17T11:25:12 WAT" duration-ms="2237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSampleList_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetSampleList@3561c410]" started-at="2022-01-17T11:25:12 WAT" name="Waiter" finished-at="2022-01-17T11:25:13 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetSampleList@3561c410]" started-at="2022-01-17T11:25:13 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:13 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSampleList_200()[pri:2, instance:StakeHolder.GetSampleList@3561c410]" started-at="2022-01-17T11:25:13 WAT" name="GetSampleList_200" finished-at="2022-01-17T11:25:17 WAT" duration-ms="3827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSampleList_200 -->
      </class> <!-- StakeHolder.GetSampleList -->
    </test> <!-- Get Sample List -->
    <test started-at="2022-01-17T11:25:17 WAT" name="Get Stake Holder" finished-at="2022-01-17T11:25:23 WAT" duration-ms="6304">
      <class name="StakeHolder.GetStake_Holder">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetStake_Holder@3d246ea3]" started-at="2022-01-17T11:25:17 WAT" name="Waiter" finished-at="2022-01-17T11:25:17 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetStake_Holder@3d246ea3]" started-at="2022-01-17T11:25:17 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:17 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetStakeHolder_401()[pri:1, instance:StakeHolder.GetStake_Holder@3d246ea3]" started-at="2022-01-17T11:25:17 WAT" name="GetStakeHolder_401" finished-at="2022-01-17T11:25:18 WAT" duration-ms="1240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetStakeHolder_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.GetStake_Holder@3d246ea3]" started-at="2022-01-17T11:25:18 WAT" name="Waiter" finished-at="2022-01-17T11:25:19 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.GetStake_Holder@3d246ea3]" started-at="2022-01-17T11:25:19 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:19 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetStakeHolder_200()[pri:2, instance:StakeHolder.GetStake_Holder@3d246ea3]" started-at="2022-01-17T11:25:19 WAT" name="GetStakeHolder_200" finished-at="2022-01-17T11:25:23 WAT" duration-ms="3965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetStakeHolder_200 -->
      </class> <!-- StakeHolder.GetStake_Holder -->
    </test> <!-- Get Stake Holder -->
    <test started-at="2022-01-17T11:25:23 WAT" name="UpdateStake Holder" finished-at="2022-01-17T11:25:30 WAT" duration-ms="6666">
      <class name="StakeHolder.UpdateStakeHolder">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.UpdateStakeHolder@71329995]" started-at="2022-01-17T11:25:23 WAT" name="Waiter" finished-at="2022-01-17T11:25:24 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.UpdateStakeHolder@71329995]" started-at="2022-01-17T11:25:24 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:24 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateStakeHolder_400()[pri:0, instance:StakeHolder.UpdateStakeHolder@71329995]" started-at="2022-01-17T11:25:24 WAT" name="UpdateStakeHolder_400" finished-at="2022-01-17T11:25:28 WAT" duration-ms="4208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateStakeHolder_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:StakeHolder.UpdateStakeHolder@71329995]" started-at="2022-01-17T11:25:28 WAT" name="Waiter" finished-at="2022-01-17T11:25:28 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:StakeHolder.UpdateStakeHolder@71329995]" started-at="2022-01-17T11:25:28 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:28 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateStakeHolder_401()[pri:0, instance:StakeHolder.UpdateStakeHolder@71329995]" started-at="2022-01-17T11:25:28 WAT" name="UpdateStakeHolder_401" finished-at="2022-01-17T11:25:30 WAT" duration-ms="1373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateStakeHolder_401 -->
      </class> <!-- StakeHolder.UpdateStakeHolder -->
    </test> <!-- UpdateStake Holder -->
    <test started-at="2022-01-17T11:25:30 WAT" name="Admin Collection" finished-at="2022-01-17T11:25:36 WAT" duration-ms="6039">
      <class name="Admin.Admin">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Admin.Admin@1ab06251]" started-at="2022-01-17T11:25:30 WAT" name="Waiter" finished-at="2022-01-17T11:25:30 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Admin.Admin@1ab06251]" started-at="2022-01-17T11:25:30 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:30 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Admin_401()[pri:1, instance:Admin.Admin@1ab06251]" started-at="2022-01-17T11:25:30 WAT" name="Admin_401" finished-at="2022-01-17T11:25:32 WAT" duration-ms="1232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Admin_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Admin.Admin@1ab06251]" started-at="2022-01-17T11:25:32 WAT" name="Waiter" finished-at="2022-01-17T11:25:32 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Admin.Admin@1ab06251]" started-at="2022-01-17T11:25:32 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:32 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Admin_200()[pri:2, instance:Admin.Admin@1ab06251]" started-at="2022-01-17T11:25:32 WAT" name="Admin_200" finished-at="2022-01-17T11:25:36 WAT" duration-ms="3717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Admin_200 -->
      </class> <!-- Admin.Admin -->
    </test> <!-- Admin Collection -->
    <test started-at="2022-01-17T11:25:36 WAT" name="SendMail" finished-at="2022-01-17T11:25:50 WAT" duration-ms="14164">
      <class name="BE.Sendmail">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:36 WAT" name="Waiter" finished-at="2022-01-17T11:25:36 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:36 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:36 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="SendMail_200()[pri:1, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:36 WAT" name="SendMail_200" finished-at="2022-01-17T11:25:38 WAT" duration-ms="1162" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[baseURI cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: baseURI cannot be null
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.<init>(RequestSpecificationImpl.groovy:137)
at io.restassured.RestAssured.createTestSpecification(RestAssured.java:1452)
at io.restassured.RestAssured.given(RestAssured.java:653)
at utility.RestCalls.POST_200(RestCalls.java:52)
at BE.Sendmail.SendMail_200(Sendmail.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMail_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:38 WAT" name="Waiter" finished-at="2022-01-17T11:25:38 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:38 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:38 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendMail_200()[pri:1, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:38 WAT" name="SendMail_200" finished-at="2022-01-17T11:25:39 WAT" duration-ms="926" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[baseURI cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: baseURI cannot be null
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.<init>(RequestSpecificationImpl.groovy:137)
at io.restassured.RestAssured.createTestSpecification(RestAssured.java:1452)
at io.restassured.RestAssured.given(RestAssured.java:653)
at utility.RestCalls.POST_200(RestCalls.java:52)
at BE.Sendmail.SendMail_200(Sendmail.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMail_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:39 WAT" name="Waiter" finished-at="2022-01-17T11:25:40 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:40 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:40 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendMail_wrong_Email()[pri:2, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:40 WAT" name="SendMail_wrong_Email" finished-at="2022-01-17T11:25:43 WAT" duration-ms="3592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMail_wrong_Email -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:43 WAT" name="Waiter" finished-at="2022-01-17T11:25:44 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:44 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:44 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendMail_Incomplete_Payload_400()[pri:3, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:44 WAT" name="SendMail_Incomplete_Payload_400" finished-at="2022-01-17T11:25:47 WAT" duration-ms="3682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMail_Incomplete_Payload_400 -->
        <test-method is-config="true" signature="ClearMailBox()[pri:0, instance:BE.Sendmail@37e4d7bb]" started-at="2022-01-17T11:25:47 WAT" name="ClearMailBox" finished-at="2022-01-17T11:25:50 WAT" duration-ms="2554" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <404> but was: <200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <404> but was: <200>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at utility.Luhn.MailSac.DeleteMailMessage(MailSac.java:80)
at BE.Sendmail.ClearMailBox(Sendmail.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.afterRun(TestRunner.java:877)
at org.testng.TestRunner.run(TestRunner.java:599)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearMailBox -->
      </class> <!-- BE.Sendmail -->
    </test> <!-- SendMail -->
    <test started-at="2022-01-17T11:25:50 WAT" name="SendMail with Attachment" finished-at="2022-01-17T11:26:04 WAT" duration-ms="14085">
      <class name="BE.SendMailSingleWithAttachment64">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:50 WAT" name="Waiter" finished-at="2022-01-17T11:25:51 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:51 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:51 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="SendMailSingleAttachment64_200()[pri:1, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:51 WAT" name="SendMailSingleAttachment64_200" finished-at="2022-01-17T11:25:52 WAT" duration-ms="947" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[baseURI cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: baseURI cannot be null
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.<init>(RequestSpecificationImpl.groovy:137)
at io.restassured.RestAssured.createTestSpecification(RestAssured.java:1452)
at io.restassured.RestAssured.given(RestAssured.java:653)
at utility.RestCalls.POST_200(RestCalls.java:52)
at BE.SendMailSingleWithAttachment64.SendMailSingleAttachment64_200(SendMailSingleWithAttachment64.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMailSingleAttachment64_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:52 WAT" name="Waiter" finished-at="2022-01-17T11:25:52 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:52 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:52 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendMailSingleAttachment64_200()[pri:1, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:52 WAT" name="SendMailSingleAttachment64_200" finished-at="2022-01-17T11:25:53 WAT" duration-ms="907" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[baseURI cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: baseURI cannot be null
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.<init>(RequestSpecificationImpl.groovy:137)
at io.restassured.RestAssured.createTestSpecification(RestAssured.java:1452)
at io.restassured.RestAssured.given(RestAssured.java:653)
at utility.RestCalls.POST_200(RestCalls.java:52)
at BE.SendMailSingleWithAttachment64.SendMailSingleAttachment64_200(SendMailSingleWithAttachment64.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMailSingleAttachment64_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:53 WAT" name="Waiter" finished-at="2022-01-17T11:25:54 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:54 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:54 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="SendMailSingleAttachment64_400()[pri:2, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:54 WAT" name="SendMailSingleAttachment64_400" finished-at="2022-01-17T11:25:58 WAT" duration-ms="3993" status="SKIP">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <500>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <500>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at BE.SendMailSingleWithAttachment64.SendMailSingleAttachment64_400(SendMailSingleWithAttachment64.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMailSingleAttachment64_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:58 WAT" name="Waiter" finished-at="2022-01-17T11:25:58 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:58 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:25:58 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendMailSingleAttachment64_400()[pri:2, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:25:58 WAT" name="SendMailSingleAttachment64_400" finished-at="2022-01-17T11:26:02 WAT" duration-ms="4109" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <500>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <500>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at BE.SendMailSingleWithAttachment64.SendMailSingleAttachment64_400(SendMailSingleWithAttachment64.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMailSingleAttachment64_400 -->
        <test-method is-config="true" signature="ClearMailBox()[pri:0, instance:BE.SendMailSingleWithAttachment64@44d52de2]" started-at="2022-01-17T11:26:02 WAT" name="ClearMailBox" finished-at="2022-01-17T11:26:04 WAT" duration-ms="1898" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <404> but was: <200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <404> but was: <200>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at utility.Luhn.MailSac.DeleteMailMessage(MailSac.java:80)
at BE.SendMailSingleWithAttachment64.ClearMailBox(SendMailSingleWithAttachment64.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.afterRun(TestRunner.java:877)
at org.testng.TestRunner.run(TestRunner.java:599)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearMailBox -->
      </class> <!-- BE.SendMailSingleWithAttachment64 -->
    </test> <!-- SendMail with Attachment -->
    <test started-at="2022-01-17T11:26:04 WAT" name="Get Version" finished-at="2022-01-17T11:26:09 WAT" duration-ms="4356">
      <class name="BE.GetVersion.GetVersion">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.GetVersion.GetVersion@31add175]" started-at="2022-01-17T11:26:04 WAT" name="Waiter" finished-at="2022-01-17T11:26:05 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.GetVersion.GetVersion@31add175]" started-at="2022-01-17T11:26:05 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:05 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetVersion200()[pri:0, instance:BE.GetVersion.GetVersion@31add175]" started-at="2022-01-17T11:26:05 WAT" name="GetVersion200" finished-at="2022-01-17T11:26:09 WAT" duration-ms="3835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetVersion200 -->
      </class> <!-- BE.GetVersion.GetVersion -->
    </test> <!-- Get Version -->
    <test started-at="2022-01-17T11:26:09 WAT" name="Get Action" finished-at="2022-01-17T11:26:14 WAT" duration-ms="4895">
      <class name="Permission.Get_Action">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Permission.Get_Action@71e9ebae]" started-at="2022-01-17T11:26:09 WAT" name="Waiter" finished-at="2022-01-17T11:26:09 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Permission.Get_Action@71e9ebae]" started-at="2022-01-17T11:26:09 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:09 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_All_Action_Under_Role_200()[pri:2, instance:Permission.Get_Action@71e9ebae]" started-at="2022-01-17T11:26:09 WAT" name="Get_All_Action_Under_Role_200" finished-at="2022-01-17T11:26:14 WAT" duration-ms="4339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_All_Action_Under_Role_200 -->
      </class> <!-- Permission.Get_Action -->
    </test> <!-- Get Action -->
    <test started-at="2022-01-17T11:26:14 WAT" name="Get Permission" finished-at="2022-01-17T11:26:19 WAT" duration-ms="5482">
      <class name="Permission.GetPermission">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Permission.GetPermission@5a3bc7ed]" started-at="2022-01-17T11:26:14 WAT" name="Waiter" finished-at="2022-01-17T11:26:14 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Permission.GetPermission@5a3bc7ed]" started-at="2022-01-17T11:26:14 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:14 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetPermission_200()[pri:0, instance:Permission.GetPermission@5a3bc7ed]" started-at="2022-01-17T11:26:14 WAT" name="GetPermission_200" finished-at="2022-01-17T11:26:19 WAT" duration-ms="4937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPermission_200 -->
      </class> <!-- Permission.GetPermission -->
    </test> <!-- Get Permission -->
    <test started-at="2022-01-17T11:26:19 WAT" name="Update Role Action" finished-at="2022-01-17T11:26:31 WAT" duration-ms="11798">
      <class name="Permission.UpdateRoleAction">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:19 WAT" name="Waiter" finished-at="2022-01-17T11:26:20 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:20 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:20 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateActionPermission_401()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:20 WAT" name="UpdateActionPermission_401" finished-at="2022-01-17T11:26:21 WAT" duration-ms="1290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateActionPermission_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:21 WAT" name="Waiter" finished-at="2022-01-17T11:26:22 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:22 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:22 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateAction_200()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:22 WAT" name="UpdateAction_200" finished-at="2022-01-17T11:26:26 WAT" duration-ms="4450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateAction_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:26 WAT" name="Waiter" finished-at="2022-01-17T11:26:27 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:27 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:27 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateAction_Multiple_Permission_200()[pri:0, instance:Permission.UpdateRoleAction@16eccb2e]" started-at="2022-01-17T11:26:27 WAT" name="UpdateAction_Multiple_Permission_200" finished-at="2022-01-17T11:26:31 WAT" duration-ms="4416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateAction_Multiple_Permission_200 -->
      </class> <!-- Permission.UpdateRoleAction -->
    </test> <!-- Update Role Action -->
    <test started-at="2022-01-17T11:26:31 WAT" name="Create New Admin Role" finished-at="2022-01-17T11:26:47 WAT" duration-ms="15652">
      <class name="Role.CreateNewAdminRole">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:31 WAT" name="Waiter" finished-at="2022-01-17T11:26:32 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:32 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:32 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateNewAdminRoleWithoutPermission_()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:32 WAT" name="CreateNewAdminRoleWithoutPermission_" finished-at="2022-01-17T11:26:36 WAT" duration-ms="4486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateNewAdminRoleWithoutPermission_ -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:36 WAT" name="Waiter" finished-at="2022-01-17T11:26:37 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:37 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:37 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateNewAdminRole_200()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:37 WAT" name="CreateNewAdminRole_200" finished-at="2022-01-17T11:26:41 WAT" duration-ms="4011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateNewAdminRole_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:41 WAT" name="Waiter" finished-at="2022-01-17T11:26:41 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:41 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:41 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateNewAdminRole_401()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:41 WAT" name="CreateNewAdminRole_401" finished-at="2022-01-17T11:26:43 WAT" duration-ms="1226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateNewAdminRole_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:43 WAT" name="Waiter" finished-at="2022-01-17T11:26:43 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:43 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:43 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="CreateNewAdminRole_409()[pri:0, instance:Role.CreateNewAdminRole@36060e]" started-at="2022-01-17T11:26:43 WAT" name="CreateNewAdminRole_409" finished-at="2022-01-17T11:26:47 WAT" duration-ms="3749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateNewAdminRole_409 -->
      </class> <!-- Role.CreateNewAdminRole -->
    </test> <!-- Create New Admin Role -->
    <test started-at="2022-01-17T11:26:47 WAT" name="Create New Stake Holder Role" finished-at="2022-01-17T11:26:47 WAT" duration-ms="0">
    </test> <!-- Create New Stake Holder Role -->
    <test started-at="2022-01-17T11:26:47 WAT" name="Get All Role" finished-at="2022-01-17T11:26:55 WAT" duration-ms="7604">
      <class name="Role.Get_All_Roles">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.Get_All_Roles@1f53a5dc]" started-at="2022-01-17T11:26:47 WAT" name="Waiter" finished-at="2022-01-17T11:26:47 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.Get_All_Roles@1f53a5dc]" started-at="2022-01-17T11:26:47 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:47 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Role_401()[pri:0, instance:Role.Get_All_Roles@1f53a5dc]" started-at="2022-01-17T11:26:47 WAT" name="Get_Role_401" finished-at="2022-01-17T11:26:49 WAT" duration-ms="1236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Role_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.Get_All_Roles@1f53a5dc]" started-at="2022-01-17T11:26:49 WAT" name="Waiter" finished-at="2022-01-17T11:26:49 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.Get_All_Roles@1f53a5dc]" started-at="2022-01-17T11:26:49 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="Get_Role_Success()[pri:0, instance:Role.Get_All_Roles@1f53a5dc]" started-at="2022-01-17T11:26:49 WAT" name="Get_Role_Success" finished-at="2022-01-17T11:26:54 WAT" duration-ms="5274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Role_Success -->
      </class> <!-- Role.Get_All_Roles -->
    </test> <!-- Get All Role -->
    <test started-at="2022-01-17T11:26:55 WAT" name="Get Role" finished-at="2022-01-17T11:27:01 WAT" duration-ms="6878">
      <class name="Role.Get_Role">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.Get_Role@3403e2ac]" started-at="2022-01-17T11:26:55 WAT" name="Waiter" finished-at="2022-01-17T11:26:55 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.Get_Role@3403e2ac]" started-at="2022-01-17T11:26:55 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:26:55 WAT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="New_Role200()[pri:0, instance:Role.Get_Role@3403e2ac]" started-at="2022-01-17T11:26:55 WAT" name="New_Role200" finished-at="2022-01-17T11:27:01 WAT" duration-ms="6333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- New_Role200 -->
      </class> <!-- Role.Get_Role -->
    </test> <!-- Get Role -->
    <test started-at="2022-01-17T11:27:02 WAT" name="Get all for Sel" finished-at="2022-01-17T11:27:08 WAT" duration-ms="6138">
      <class name="Role.GetAllForSel">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetAllForSel@38b27cdc]" started-at="2022-01-17T11:27:02 WAT" name="Waiter" finished-at="2022-01-17T11:27:02 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetAllForSel@38b27cdc]" started-at="2022-01-17T11:27:02 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:02 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllSel401()[pri:1, instance:Role.GetAllForSel@38b27cdc]" started-at="2022-01-17T11:27:02 WAT" name="GetAllSel401" finished-at="2022-01-17T11:27:03 WAT" duration-ms="1214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllSel401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetAllForSel@38b27cdc]" started-at="2022-01-17T11:27:03 WAT" name="Waiter" finished-at="2022-01-17T11:27:04 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetAllForSel@38b27cdc]" started-at="2022-01-17T11:27:04 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:04 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllSel200()[pri:2, instance:Role.GetAllForSel@38b27cdc]" started-at="2022-01-17T11:27:04 WAT" name="GetAllSel200" finished-at="2022-01-17T11:27:08 WAT" duration-ms="3771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllSel200 -->
      </class> <!-- Role.GetAllForSel -->
    </test> <!-- Get all for Sel -->
    <test started-at="2022-01-17T11:27:08 WAT" name="Get Dashboards" finished-at="2022-01-17T11:27:14 WAT" duration-ms="6068">
      <class name="Role.GetDashboards">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetDashboards@68df9280]" started-at="2022-01-17T11:27:08 WAT" name="Waiter" finished-at="2022-01-17T11:27:08 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetDashboards@68df9280]" started-at="2022-01-17T11:27:08 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:08 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDashboards401()[pri:1, instance:Role.GetDashboards@68df9280]" started-at="2022-01-17T11:27:08 WAT" name="GetDashboards401" finished-at="2022-01-17T11:27:10 WAT" duration-ms="1266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDashboards401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetDashboards@68df9280]" started-at="2022-01-17T11:27:10 WAT" name="Waiter" finished-at="2022-01-17T11:27:10 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetDashboards@68df9280]" started-at="2022-01-17T11:27:10 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:10 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDashboards200()[pri:2, instance:Role.GetDashboards@68df9280]" started-at="2022-01-17T11:27:10 WAT" name="GetDashboards200" finished-at="2022-01-17T11:27:14 WAT" duration-ms="3681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDashboards200 -->
      </class> <!-- Role.GetDashboards -->
    </test> <!-- Get Dashboards -->
    <test started-at="2022-01-17T11:27:14 WAT" name="Get Roles of Stakeholder" finished-at="2022-01-17T11:27:20 WAT" duration-ms="5990">
      <class name="Role.GetRoleOfStakeHolder">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetRoleOfStakeHolder@3f91b517]" started-at="2022-01-17T11:27:14 WAT" name="Waiter" finished-at="2022-01-17T11:27:14 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetRoleOfStakeHolder@3f91b517]" started-at="2022-01-17T11:27:14 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:14 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDashboards401()[pri:1, instance:Role.GetRoleOfStakeHolder@3f91b517]" started-at="2022-01-17T11:27:14 WAT" name="GetDashboards401" finished-at="2022-01-17T11:27:16 WAT" duration-ms="1208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDashboards401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetRoleOfStakeHolder@3f91b517]" started-at="2022-01-17T11:27:16 WAT" name="Waiter" finished-at="2022-01-17T11:27:16 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetRoleOfStakeHolder@3f91b517]" started-at="2022-01-17T11:27:16 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:16 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllSel200()[pri:2, instance:Role.GetRoleOfStakeHolder@3f91b517]" started-at="2022-01-17T11:27:16 WAT" name="GetAllSel200" finished-at="2022-01-17T11:27:20 WAT" duration-ms="3666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllSel200 -->
      </class> <!-- Role.GetRoleOfStakeHolder -->
    </test> <!-- Get Roles of Stakeholder -->
    <test started-at="2022-01-17T11:27:20 WAT" name="Get Stakeholder Roles for Selection" finished-at="2022-01-17T11:27:26 WAT" duration-ms="5986">
      <class name="Role.GetStakeHolderRoleForSelection">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetStakeHolderRoleForSelection@59a008ba]" started-at="2022-01-17T11:27:20 WAT" name="Waiter" finished-at="2022-01-17T11:27:20 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetStakeHolderRoleForSelection@59a008ba]" started-at="2022-01-17T11:27:20 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:20 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDashboards401()[pri:1, instance:Role.GetStakeHolderRoleForSelection@59a008ba]" started-at="2022-01-17T11:27:20 WAT" name="GetDashboards401" finished-at="2022-01-17T11:27:22 WAT" duration-ms="1257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDashboards401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Role.GetStakeHolderRoleForSelection@59a008ba]" started-at="2022-01-17T11:27:22 WAT" name="Waiter" finished-at="2022-01-17T11:27:22 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Role.GetStakeHolderRoleForSelection@59a008ba]" started-at="2022-01-17T11:27:22 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:22 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllSel200()[pri:2, instance:Role.GetStakeHolderRoleForSelection@59a008ba]" started-at="2022-01-17T11:27:22 WAT" name="GetAllSel200" finished-at="2022-01-17T11:27:26 WAT" duration-ms="3602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllSel200 -->
      </class> <!-- Role.GetStakeHolderRoleForSelection -->
    </test> <!-- Get Stakeholder Roles for Selection -->
    <test started-at="2022-01-17T11:27:26 WAT" name="Get Agent Chat Count" finished-at="2022-01-17T11:27:33 WAT" duration-ms="6518">
      <class name="Report.GetAgentChatCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAgentChatCount@b4711e2]" started-at="2022-01-17T11:27:26 WAT" name="Waiter" finished-at="2022-01-17T11:27:27 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAgentChatCount@b4711e2]" started-at="2022-01-17T11:27:27 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:27 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentChatCount_401()[pri:1, instance:Report.GetAgentChatCount@b4711e2]" started-at="2022-01-17T11:27:27 WAT" name="GetAgentChatCount_401" finished-at="2022-01-17T11:27:28 WAT" duration-ms="1250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentChatCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAgentChatCount@b4711e2]" started-at="2022-01-17T11:27:28 WAT" name="Waiter" finished-at="2022-01-17T11:27:28 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAgentChatCount@b4711e2]" started-at="2022-01-17T11:27:28 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:28 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentChatCount_200()[pri:2, instance:Report.GetAgentChatCount@b4711e2]" started-at="2022-01-17T11:27:28 WAT" name="GetAgentChatCount_200" finished-at="2022-01-17T11:27:32 WAT" duration-ms="4125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentChatCount_200 -->
      </class> <!-- Report.GetAgentChatCount -->
    </test> <!-- Get Agent Chat Count -->
    <test started-at="2022-01-17T11:27:33 WAT" name="Get Agent Chat Percentage" finished-at="2022-01-17T11:27:39 WAT" duration-ms="6501">
      <class name="Report.GetAgentChatPercentage">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAgentChatPercentage@5b6ec132]" started-at="2022-01-17T11:27:33 WAT" name="Waiter" finished-at="2022-01-17T11:27:33 WAT" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAgentChatPercentage@5b6ec132]" started-at="2022-01-17T11:27:33 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:33 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentChatPercentage_401()[pri:1, instance:Report.GetAgentChatPercentage@5b6ec132]" started-at="2022-01-17T11:27:33 WAT" name="GetAgentChatPercentage_401" finished-at="2022-01-17T11:27:34 WAT" duration-ms="1298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentChatPercentage_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAgentChatPercentage@5b6ec132]" started-at="2022-01-17T11:27:34 WAT" name="Waiter" finished-at="2022-01-17T11:27:35 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAgentChatPercentage@5b6ec132]" started-at="2022-01-17T11:27:35 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:35 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAgentChatPercentage_200()[pri:2, instance:Report.GetAgentChatPercentage@5b6ec132]" started-at="2022-01-17T11:27:35 WAT" name="GetAgentChatPercentage_200" finished-at="2022-01-17T11:27:39 WAT" duration-ms="4129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAgentChatPercentage_200 -->
      </class> <!-- Report.GetAgentChatPercentage -->
    </test> <!-- Get Agent Chat Percentage -->
    <test started-at="2022-01-17T11:27:39 WAT" name="Get All Notification Message Count" finished-at="2022-01-17T11:27:45 WAT" duration-ms="6147">
      <class name="Report.GetAllNotificationMessageCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAllNotificationMessageCount@7a67e3c6]" started-at="2022-01-17T11:27:39 WAT" name="Waiter" finished-at="2022-01-17T11:27:40 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAllNotificationMessageCount@7a67e3c6]" started-at="2022-01-17T11:27:40 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:40 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllNotificationMessageCount_401()[pri:1, instance:Report.GetAllNotificationMessageCount@7a67e3c6]" started-at="2022-01-17T11:27:40 WAT" name="GetAllNotificationMessageCount_401" finished-at="2022-01-17T11:27:41 WAT" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllNotificationMessageCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAllNotificationMessageCount@7a67e3c6]" started-at="2022-01-17T11:27:41 WAT" name="Waiter" finished-at="2022-01-17T11:27:41 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAllNotificationMessageCount@7a67e3c6]" started-at="2022-01-17T11:27:41 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:41 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllNotificationMessageCount_200()[pri:2, instance:Report.GetAllNotificationMessageCount@7a67e3c6]" started-at="2022-01-17T11:27:41 WAT" name="GetAllNotificationMessageCount_200" finished-at="2022-01-17T11:27:45 WAT" duration-ms="3813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllNotificationMessageCount_200 -->
      </class> <!-- Report.GetAllNotificationMessageCount -->
    </test> <!-- Get All Notification Message Count -->
    <test started-at="2022-01-17T11:27:45 WAT" name="Get Audit Logs" finished-at="2022-01-17T11:27:53 WAT" duration-ms="7352">
      <class name="Report.GetAuditLogs">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAuditLogs@d41f816]" started-at="2022-01-17T11:27:45 WAT" name="Waiter" finished-at="2022-01-17T11:27:46 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAuditLogs@d41f816]" started-at="2022-01-17T11:27:46 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:46 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAuditLogs_401()[pri:1, instance:Report.GetAuditLogs@d41f816]" started-at="2022-01-17T11:27:46 WAT" name="GetAuditLogs_401" finished-at="2022-01-17T11:27:47 WAT" duration-ms="1301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAuditLogs_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAuditLogs@d41f816]" started-at="2022-01-17T11:27:47 WAT" name="Waiter" finished-at="2022-01-17T11:27:48 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAuditLogs@d41f816]" started-at="2022-01-17T11:27:48 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:48 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAuditLogs_200()[pri:2, instance:Report.GetAuditLogs@d41f816]" started-at="2022-01-17T11:27:48 WAT" name="GetAuditLogs_200" finished-at="2022-01-17T11:27:53 WAT" duration-ms="4944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAuditLogs_200 -->
      </class> <!-- Report.GetAuditLogs -->
    </test> <!-- Get Audit Logs -->
    <test started-at="2022-01-17T11:27:53 WAT" name="Get Audit Logs Action" finished-at="2022-01-17T11:27:59 WAT" duration-ms="6189">
      <class name="Report.GetAuditLogsAction">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAuditLogsAction@27216cd]" started-at="2022-01-17T11:27:53 WAT" name="Waiter" finished-at="2022-01-17T11:27:53 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAuditLogsAction@27216cd]" started-at="2022-01-17T11:27:53 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:53 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAuditLogsAction_401()[pri:1, instance:Report.GetAuditLogsAction@27216cd]" started-at="2022-01-17T11:27:53 WAT" name="GetAuditLogsAction_401" finished-at="2022-01-17T11:27:55 WAT" duration-ms="1280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAuditLogsAction_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAuditLogsAction@27216cd]" started-at="2022-01-17T11:27:55 WAT" name="Waiter" finished-at="2022-01-17T11:27:55 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAuditLogsAction@27216cd]" started-at="2022-01-17T11:27:55 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:27:55 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAuditLogsAction_200()[pri:2, instance:Report.GetAuditLogsAction@27216cd]" started-at="2022-01-17T11:27:55 WAT" name="GetAuditLogsAction_200" finished-at="2022-01-17T11:27:59 WAT" duration-ms="3821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAuditLogsAction_200 -->
      </class> <!-- Report.GetAuditLogsAction -->
    </test> <!-- Get Audit Logs Action -->
    <test started-at="2022-01-17T11:27:59 WAT" name="Get Audit Logs Detail" finished-at="2022-01-17T11:28:05 WAT" duration-ms="6333">
      <class name="Report.GetAuditLogsDetails">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAuditLogsDetails@3daf7722]" started-at="2022-01-17T11:27:59 WAT" name="Waiter" finished-at="2022-01-17T11:28:00 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAuditLogsDetails@3daf7722]" started-at="2022-01-17T11:28:00 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:00 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAuditLogsDetails_401()[pri:1, instance:Report.GetAuditLogsDetails@3daf7722]" started-at="2022-01-17T11:28:00 WAT" name="GetAuditLogsDetails_401" finished-at="2022-01-17T11:28:01 WAT" duration-ms="1177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAuditLogsDetails_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAuditLogsDetails@3daf7722]" started-at="2022-01-17T11:28:01 WAT" name="Waiter" finished-at="2022-01-17T11:28:01 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAuditLogsDetails@3daf7722]" started-at="2022-01-17T11:28:01 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:01 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAuditLogsDetails_200()[pri:2, instance:Report.GetAuditLogsDetails@3daf7722]" started-at="2022-01-17T11:28:01 WAT" name="GetAuditLogsDetails_200" finished-at="2022-01-17T11:28:05 WAT" duration-ms="4029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAuditLogsDetails_200 -->
      </class> <!-- Report.GetAuditLogsDetails -->
    </test> <!-- Get Audit Logs Detail -->
    <test started-at="2022-01-17T11:28:06 WAT" name="Get Average Rating Count" finished-at="2022-01-17T11:28:12 WAT" duration-ms="6124">
      <class name="Report.GetAverageRatingCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAverageRatingCount@1869fbd2]" started-at="2022-01-17T11:28:06 WAT" name="Waiter" finished-at="2022-01-17T11:28:06 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAverageRatingCount@1869fbd2]" started-at="2022-01-17T11:28:06 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:06 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAverageRatingCount_401()[pri:1, instance:Report.GetAverageRatingCount@1869fbd2]" started-at="2022-01-17T11:28:06 WAT" name="GetAverageRatingCount_401" finished-at="2022-01-17T11:28:07 WAT" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAverageRatingCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAverageRatingCount@1869fbd2]" started-at="2022-01-17T11:28:07 WAT" name="Waiter" finished-at="2022-01-17T11:28:08 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAverageRatingCount@1869fbd2]" started-at="2022-01-17T11:28:08 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:08 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAverageRatingCount_200()[pri:2, instance:Report.GetAverageRatingCount@1869fbd2]" started-at="2022-01-17T11:28:08 WAT" name="GetAverageRatingCount_200" finished-at="2022-01-17T11:28:12 WAT" duration-ms="3750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAverageRatingCount_200 -->
      </class> <!-- Report.GetAverageRatingCount -->
    </test> <!-- Get Average Rating Count -->
    <test started-at="2022-01-17T11:28:12 WAT" name="Get Average Chat Duration" finished-at="2022-01-17T11:28:18 WAT" duration-ms="6203">
      <class name="Report.GetAVGChatDuration">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAVGChatDuration@3b7d3a38]" started-at="2022-01-17T11:28:12 WAT" name="Waiter" finished-at="2022-01-17T11:28:12 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAVGChatDuration@3b7d3a38]" started-at="2022-01-17T11:28:12 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:12 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAVGChatDuration_401()[pri:1, instance:Report.GetAVGChatDuration@3b7d3a38]" started-at="2022-01-17T11:28:12 WAT" name="GetAVGChatDuration_401" finished-at="2022-01-17T11:28:13 WAT" duration-ms="1245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAVGChatDuration_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAVGChatDuration@3b7d3a38]" started-at="2022-01-17T11:28:14 WAT" name="Waiter" finished-at="2022-01-17T11:28:14 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAVGChatDuration@3b7d3a38]" started-at="2022-01-17T11:28:14 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:14 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAVGChatDuration_200()[pri:2, instance:Report.GetAVGChatDuration@3b7d3a38]" started-at="2022-01-17T11:28:14 WAT" name="GetAVGChatDuration_200" finished-at="2022-01-17T11:28:18 WAT" duration-ms="3851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAVGChatDuration_200 -->
      </class> <!-- Report.GetAVGChatDuration -->
    </test> <!-- Get Average Chat Duration -->
    <test started-at="2022-01-17T11:28:18 WAT" name="Get Bot Session" finished-at="2022-01-17T11:28:24 WAT" duration-ms="6046">
      <class name="Report.GetAVGChatDuration">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAVGChatDuration@21337f7b]" started-at="2022-01-17T11:28:18 WAT" name="Waiter" finished-at="2022-01-17T11:28:19 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAVGChatDuration@21337f7b]" started-at="2022-01-17T11:28:19 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:19 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAVGChatDuration_401()[pri:1, instance:Report.GetAVGChatDuration@21337f7b]" started-at="2022-01-17T11:28:19 WAT" name="GetAVGChatDuration_401" finished-at="2022-01-17T11:28:20 WAT" duration-ms="1211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAVGChatDuration_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAVGChatDuration@21337f7b]" started-at="2022-01-17T11:28:20 WAT" name="Waiter" finished-at="2022-01-17T11:28:20 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAVGChatDuration@21337f7b]" started-at="2022-01-17T11:28:20 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:20 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAVGChatDuration_200()[pri:2, instance:Report.GetAVGChatDuration@21337f7b]" started-at="2022-01-17T11:28:20 WAT" name="GetAVGChatDuration_200" finished-at="2022-01-17T11:28:24 WAT" duration-ms="3676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAVGChatDuration_200 -->
      </class> <!-- Report.GetAVGChatDuration -->
    </test> <!-- Get Bot Session -->
    <test started-at="2022-01-17T11:28:24 WAT" name="Get Chat Wait time" finished-at="2022-01-17T11:28:31 WAT" duration-ms="6726">
      <class name="Report.GetChatWaitTimeGroup">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetChatWaitTimeGroup@512baff6]" started-at="2022-01-17T11:28:24 WAT" name="Waiter" finished-at="2022-01-17T11:28:25 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetChatWaitTimeGroup@512baff6]" started-at="2022-01-17T11:28:25 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:25 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetChatWaitTimeGroup_401()[pri:1, instance:Report.GetChatWaitTimeGroup@512baff6]" started-at="2022-01-17T11:28:25 WAT" name="GetChatWaitTimeGroup_401" finished-at="2022-01-17T11:28:26 WAT" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetChatWaitTimeGroup_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetChatWaitTimeGroup@512baff6]" started-at="2022-01-17T11:28:26 WAT" name="Waiter" finished-at="2022-01-17T11:28:27 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetChatWaitTimeGroup@512baff6]" started-at="2022-01-17T11:28:27 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:27 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetChatWaitTimeGroup_200()[pri:2, instance:Report.GetChatWaitTimeGroup@512baff6]" started-at="2022-01-17T11:28:27 WAT" name="GetChatWaitTimeGroup_200" finished-at="2022-01-17T11:28:31 WAT" duration-ms="4289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetChatWaitTimeGroup_200 -->
      </class> <!-- Report.GetChatWaitTimeGroup -->
    </test> <!-- Get Chat Wait time -->
    <test started-at="2022-01-17T11:28:31 WAT" name="Get Customer Interaction Report" finished-at="2022-01-17T11:28:39 WAT" duration-ms="7572">
      <class name="Report.GetCustomerInteractionReport">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetCustomerInteractionReport@e383572]" started-at="2022-01-17T11:28:31 WAT" name="Waiter" finished-at="2022-01-17T11:28:31 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetCustomerInteractionReport@e383572]" started-at="2022-01-17T11:28:31 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:31 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetCustomerInteractionReport_401()[pri:1, instance:Report.GetCustomerInteractionReport@e383572]" started-at="2022-01-17T11:28:31 WAT" name="GetCustomerInteractionReport_401" finished-at="2022-01-17T11:28:33 WAT" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCustomerInteractionReport_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetCustomerInteractionReport@e383572]" started-at="2022-01-17T11:28:33 WAT" name="Waiter" finished-at="2022-01-17T11:28:33 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetCustomerInteractionReport@e383572]" started-at="2022-01-17T11:28:33 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:33 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetCustomerInteractionReport_200()[pri:2, instance:Report.GetCustomerInteractionReport@e383572]" started-at="2022-01-17T11:28:33 WAT" name="GetCustomerInteractionReport_200" finished-at="2022-01-17T11:28:38 WAT" duration-ms="5176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCustomerInteractionReport_200 -->
      </class> <!-- Report.GetCustomerInteractionReport -->
    </test> <!-- Get Customer Interaction Report -->
    <test started-at="2022-01-17T11:28:39 WAT" name="Get Daily Bot Session Count" finished-at="2022-01-17T11:28:50 WAT" duration-ms="11466">
      <class name="Report.GetDailyBotSessionCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyBotSessionCount@5f9be66c]" started-at="2022-01-17T11:28:39 WAT" name="Waiter" finished-at="2022-01-17T11:28:39 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyBotSessionCount@5f9be66c]" started-at="2022-01-17T11:28:39 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:39 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyBotSessionCount_401()[pri:1, instance:Report.GetDailyBotSessionCount@5f9be66c]" started-at="2022-01-17T11:28:39 WAT" name="GetDailyBotSessionCount_401" finished-at="2022-01-17T11:28:40 WAT" duration-ms="1204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyBotSessionCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyBotSessionCount@5f9be66c]" started-at="2022-01-17T11:28:40 WAT" name="Waiter" finished-at="2022-01-17T11:28:41 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyBotSessionCount@5f9be66c]" started-at="2022-01-17T11:28:41 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:41 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyBotSessionCount_200()[pri:2, instance:Report.GetDailyBotSessionCount@5f9be66c]" started-at="2022-01-17T11:28:41 WAT" name="GetDailyBotSessionCount_200" finished-at="2022-01-17T11:28:50 WAT" duration-ms="9126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyBotSessionCount_200 -->
      </class> <!-- Report.GetDailyBotSessionCount -->
    </test> <!-- Get Daily Bot Session Count -->
    <test started-at="2022-01-17T11:28:50 WAT" name="Get Daily Chart Session" finished-at="2022-01-17T11:29:17 WAT" duration-ms="26559">
      <class name="Report.GetDailyChartSession">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyChartSession@35432107]" started-at="2022-01-17T11:28:50 WAT" name="Waiter" finished-at="2022-01-17T11:28:51 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyChartSession@35432107]" started-at="2022-01-17T11:28:51 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:51 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyChartSession_401()[pri:1, instance:Report.GetDailyChartSession@35432107]" started-at="2022-01-17T11:28:51 WAT" name="GetDailyChartSession_401" finished-at="2022-01-17T11:28:52 WAT" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyChartSession_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyChartSession@35432107]" started-at="2022-01-17T11:28:52 WAT" name="Waiter" finished-at="2022-01-17T11:28:52 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyChartSession@35432107]" started-at="2022-01-17T11:28:52 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:28:52 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyChartSession_200()[pri:2, instance:Report.GetDailyChartSession@35432107]" started-at="2022-01-17T11:28:52 WAT" name="GetDailyChartSession_200" finished-at="2022-01-17T11:29:17 WAT" duration-ms="24288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyChartSession_200 -->
      </class> <!-- Report.GetDailyChartSession -->
    </test> <!-- Get Daily Chart Session -->
    <test started-at="2022-01-17T11:29:17 WAT" name="Get Daily Failed Bot Session" finished-at="2022-01-17T11:29:46 WAT" duration-ms="29707">
      <class name="Report.GetDailyFailedBotSession">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyFailedBotSession@3b96c42e]" started-at="2022-01-17T11:29:17 WAT" name="Waiter" finished-at="2022-01-17T11:29:17 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyFailedBotSession@3b96c42e]" started-at="2022-01-17T11:29:17 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:29:17 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyFailedBotSession_401()[pri:1, instance:Report.GetDailyFailedBotSession@3b96c42e]" started-at="2022-01-17T11:29:17 WAT" name="GetDailyFailedBotSession_401" finished-at="2022-01-17T11:29:19 WAT" duration-ms="1226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyFailedBotSession_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyFailedBotSession@3b96c42e]" started-at="2022-01-17T11:29:19 WAT" name="Waiter" finished-at="2022-01-17T11:29:19 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyFailedBotSession@3b96c42e]" started-at="2022-01-17T11:29:19 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:29:19 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyFailedBotSession_200()[pri:2, instance:Report.GetDailyFailedBotSession@3b96c42e]" started-at="2022-01-17T11:29:19 WAT" name="GetDailyFailedBotSession_200" finished-at="2022-01-17T11:29:46 WAT" duration-ms="27375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyFailedBotSession_200 -->
      </class> <!-- Report.GetDailyFailedBotSession -->
    </test> <!-- Get Daily Failed Bot Session -->
    <test started-at="2022-01-17T11:29:47 WAT" name="Get Daily Reason Count" finished-at="2022-01-17T11:29:56 WAT" duration-ms="9782">
      <class name="Report.GetDailyReasonCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyReasonCount@9ebe38b]" started-at="2022-01-17T11:29:47 WAT" name="Waiter" finished-at="2022-01-17T11:29:47 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyReasonCount@9ebe38b]" started-at="2022-01-17T11:29:47 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:29:47 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyReasonCount_401()[pri:1, instance:Report.GetDailyReasonCount@9ebe38b]" started-at="2022-01-17T11:29:47 WAT" name="GetDailyReasonCount_401" finished-at="2022-01-17T11:29:48 WAT" duration-ms="1187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyReasonCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailyReasonCount@9ebe38b]" started-at="2022-01-17T11:29:48 WAT" name="Waiter" finished-at="2022-01-17T11:29:49 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailyReasonCount@9ebe38b]" started-at="2022-01-17T11:29:49 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:29:49 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailyReasonCount_200()[pri:2, instance:Report.GetDailyReasonCount@9ebe38b]" started-at="2022-01-17T11:29:49 WAT" name="GetDailyReasonCount_200" finished-at="2022-01-17T11:29:56 WAT" duration-ms="7460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailyReasonCount_200 -->
      </class> <!-- Report.GetDailyReasonCount -->
    </test> <!-- Get Daily Reason Count -->
    <test started-at="2022-01-17T11:29:56 WAT" name="Get Daily Support Session Count" finished-at="2022-01-17T11:30:07 WAT" duration-ms="10169">
      <class name="Report.GetDailySupportSessionCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailySupportSessionCount@3cdf2c61]" started-at="2022-01-17T11:29:56 WAT" name="Waiter" finished-at="2022-01-17T11:29:57 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailySupportSessionCount@3cdf2c61]" started-at="2022-01-17T11:29:57 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:29:57 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailySupportSessionCount_401()[pri:1, instance:Report.GetDailySupportSessionCount@3cdf2c61]" started-at="2022-01-17T11:29:57 WAT" name="GetDailySupportSessionCount_401" finished-at="2022-01-17T11:29:58 WAT" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailySupportSessionCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetDailySupportSessionCount@3cdf2c61]" started-at="2022-01-17T11:29:58 WAT" name="Waiter" finished-at="2022-01-17T11:29:59 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetDailySupportSessionCount@3cdf2c61]" started-at="2022-01-17T11:29:59 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:29:59 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetDailySupportSessionCount_200()[pri:2, instance:Report.GetDailySupportSessionCount@3cdf2c61]" started-at="2022-01-17T11:29:59 WAT" name="GetDailySupportSessionCount_200" finished-at="2022-01-17T11:30:07 WAT" duration-ms="7801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDailySupportSessionCount_200 -->
      </class> <!-- Report.GetDailySupportSessionCount -->
    </test> <!-- Get Daily Support Session Count -->
    <test started-at="2022-01-17T11:30:07 WAT" name="Get Daily Ended Session Count" finished-at="2022-01-17T11:30:22 WAT" duration-ms="15073">
      <class name="Report.GetEndedSessionCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:07 WAT" name="Waiter" finished-at="2022-01-17T11:30:07 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:07 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:07 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetEndedSessionCount_401()[pri:1, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:07 WAT" name="GetEndedSessionCount_401" finished-at="2022-01-17T11:30:08 WAT" duration-ms="1178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetEndedSessionCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:08 WAT" name="Waiter" finished-at="2022-01-17T11:30:09 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:09 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:09 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="GetEndedSessionCount_200()[pri:2, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:09 WAT" name="GetEndedSessionCount_200" finished-at="2022-01-17T11:30:13 WAT" duration-ms="3733" status="SKIP">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <200> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <200> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Report.GetEndedSessionCount.GetEndedSessionCount_200(GetEndedSessionCount.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetEndedSessionCount_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:13 WAT" name="Waiter" finished-at="2022-01-17T11:30:13 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:13 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:13 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetEndedSessionCount_200()[pri:2, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:13 WAT" name="GetEndedSessionCount_200" finished-at="2022-01-17T11:30:17 WAT" duration-ms="3782" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <200> but was: <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <200> but was: <404>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at Report.GetEndedSessionCount.GetEndedSessionCount_200(GetEndedSessionCount.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetEndedSessionCount_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:17 WAT" name="Waiter" finished-at="2022-01-17T11:30:18 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:18 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:18 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetEndedSessionCount_404()[pri:3, instance:Report.GetEndedSessionCount@6ce86ce1]" started-at="2022-01-17T11:30:18 WAT" name="GetEndedSessionCount_404" finished-at="2022-01-17T11:30:22 WAT" duration-ms="4164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetEndedSessionCount_404 -->
      </class> <!-- Report.GetEndedSessionCount -->
    </test> <!-- Get Daily Ended Session Count -->
    <test started-at="2022-01-17T11:30:22 WAT" name="Get Hourly Session Count" finished-at="2022-01-17T11:30:29 WAT" duration-ms="7423">
      <class name="Report.GetHourlySessionCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetHourlySessionCount@764faa6]" started-at="2022-01-17T11:30:22 WAT" name="Waiter" finished-at="2022-01-17T11:30:22 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetHourlySessionCount@764faa6]" started-at="2022-01-17T11:30:22 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:22 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetHourlySessionCount_401()[pri:1, instance:Report.GetHourlySessionCount@764faa6]" started-at="2022-01-17T11:30:22 WAT" name="GetHourlySessionCount_401" finished-at="2022-01-17T11:30:24 WAT" duration-ms="1265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetHourlySessionCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetHourlySessionCount@764faa6]" started-at="2022-01-17T11:30:24 WAT" name="Waiter" finished-at="2022-01-17T11:30:24 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetHourlySessionCount@764faa6]" started-at="2022-01-17T11:30:24 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:24 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetHourlySessionCount_200()[pri:2, instance:Report.GetHourlySessionCount@764faa6]" started-at="2022-01-17T11:30:24 WAT" name="GetHourlySessionCount_200" finished-at="2022-01-17T11:30:29 WAT" duration-ms="5050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetHourlySessionCount_200 -->
      </class> <!-- Report.GetHourlySessionCount -->
    </test> <!-- Get Hourly Session Count -->
    <test started-at="2022-01-17T11:30:29 WAT" name="Get KB Message Chart" finished-at="2022-01-17T11:30:35 WAT" duration-ms="6040">
      <class name="Report.GetKBMessageChart">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetKBMessageChart@38234a38]" started-at="2022-01-17T11:30:29 WAT" name="Waiter" finished-at="2022-01-17T11:30:30 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetKBMessageChart@38234a38]" started-at="2022-01-17T11:30:30 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:30 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetKBMessageChart_401()[pri:1, instance:Report.GetKBMessageChart@38234a38]" started-at="2022-01-17T11:30:30 WAT" name="GetKBMessageChart_401" finished-at="2022-01-17T11:30:31 WAT" duration-ms="1230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetKBMessageChart_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetKBMessageChart@38234a38]" started-at="2022-01-17T11:30:31 WAT" name="Waiter" finished-at="2022-01-17T11:30:32 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetKBMessageChart@38234a38]" started-at="2022-01-17T11:30:32 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:32 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetKBMessageChart_200()[pri:2, instance:Report.GetKBMessageChart@38234a38]" started-at="2022-01-17T11:30:32 WAT" name="GetKBMessageChart_200" finished-at="2022-01-17T11:30:35 WAT" duration-ms="3689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetKBMessageChart_200 -->
      </class> <!-- Report.GetKBMessageChart -->
    </test> <!-- Get KB Message Chart -->
    <test started-at="2022-01-17T11:30:36 WAT" name="Get Message Count Sender" finished-at="2022-01-17T11:30:42 WAT" duration-ms="6248">
      <class name="Report.GetMessageCountSender">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetMessageCountSender@34c01041]" started-at="2022-01-17T11:30:36 WAT" name="Waiter" finished-at="2022-01-17T11:30:36 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetMessageCountSender@34c01041]" started-at="2022-01-17T11:30:36 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:36 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetMessageCountSender_401()[pri:1, instance:Report.GetMessageCountSender@34c01041]" started-at="2022-01-17T11:30:36 WAT" name="GetMessageCountSender_401" finished-at="2022-01-17T11:30:37 WAT" duration-ms="1255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetMessageCountSender_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetMessageCountSender@34c01041]" started-at="2022-01-17T11:30:37 WAT" name="Waiter" finished-at="2022-01-17T11:30:38 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetMessageCountSender@34c01041]" started-at="2022-01-17T11:30:38 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:38 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetMessageCountSender_200()[pri:2, instance:Report.GetMessageCountSender@34c01041]" started-at="2022-01-17T11:30:38 WAT" name="GetMessageCountSender_200" finished-at="2022-01-17T11:30:42 WAT" duration-ms="3840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetMessageCountSender_200 -->
      </class> <!-- Report.GetMessageCountSender -->
    </test> <!-- Get Message Count Sender -->
    <test started-at="2022-01-17T11:30:42 WAT" name="Get New Customer Count" finished-at="2022-01-17T11:30:48 WAT" duration-ms="6134">
      <class name="Report.GetNewCustomerCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetNewCustomerCount@76a2ddf3]" started-at="2022-01-17T11:30:42 WAT" name="Waiter" finished-at="2022-01-17T11:30:42 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetNewCustomerCount@76a2ddf3]" started-at="2022-01-17T11:30:42 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:42 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetNewCustomerCount_401()[pri:1, instance:Report.GetNewCustomerCount@76a2ddf3]" started-at="2022-01-17T11:30:42 WAT" name="GetNewCustomerCount_401" finished-at="2022-01-17T11:30:44 WAT" duration-ms="1230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetNewCustomerCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetNewCustomerCount@76a2ddf3]" started-at="2022-01-17T11:30:44 WAT" name="Waiter" finished-at="2022-01-17T11:30:44 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetNewCustomerCount@76a2ddf3]" started-at="2022-01-17T11:30:44 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:44 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetNewCustomerCount_200()[pri:2, instance:Report.GetNewCustomerCount@76a2ddf3]" started-at="2022-01-17T11:30:44 WAT" name="GetNewCustomerCount_200" finished-at="2022-01-17T11:30:48 WAT" duration-ms="3778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetNewCustomerCount_200 -->
      </class> <!-- Report.GetNewCustomerCount -->
    </test> <!-- Get New Customer Count -->
    <test started-at="2022-01-17T11:30:48 WAT" name="Get New Customer Report" finished-at="2022-01-17T11:30:54 WAT" duration-ms="6062">
      <class name="Report.GetNewCustomerReport">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetNewCustomerReport@45312be2]" started-at="2022-01-17T11:30:48 WAT" name="Waiter" finished-at="2022-01-17T11:30:49 WAT" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetNewCustomerReport@45312be2]" started-at="2022-01-17T11:30:49 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetNewCustomerReport_401()[pri:1, instance:Report.GetNewCustomerReport@45312be2]" started-at="2022-01-17T11:30:49 WAT" name="GetNewCustomerReport_401" finished-at="2022-01-17T11:30:50 WAT" duration-ms="1227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetNewCustomerReport_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetNewCustomerReport@45312be2]" started-at="2022-01-17T11:30:50 WAT" name="Waiter" finished-at="2022-01-17T11:30:50 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetNewCustomerReport@45312be2]" started-at="2022-01-17T11:30:50 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:50 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetNewCustomerReport_200()[pri:2, instance:Report.GetNewCustomerReport@45312be2]" started-at="2022-01-17T11:30:50 WAT" name="GetNewCustomerReport_200" finished-at="2022-01-17T11:30:54 WAT" duration-ms="3736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetNewCustomerReport_200 -->
      </class> <!-- Report.GetNewCustomerReport -->
    </test> <!-- Get New Customer Report -->
    <test started-at="2022-01-17T11:30:54 WAT" name="Get Notification Message Count" finished-at="2022-01-17T11:31:01 WAT" duration-ms="6331">
      <class name="Report.GetAllNotificationMessageCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAllNotificationMessageCount@3f9342d4]" started-at="2022-01-17T11:30:54 WAT" name="Waiter" finished-at="2022-01-17T11:30:55 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAllNotificationMessageCount@3f9342d4]" started-at="2022-01-17T11:30:55 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:55 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllNotificationMessageCount_401()[pri:1, instance:Report.GetAllNotificationMessageCount@3f9342d4]" started-at="2022-01-17T11:30:55 WAT" name="GetAllNotificationMessageCount_401" finished-at="2022-01-17T11:30:56 WAT" duration-ms="1266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllNotificationMessageCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetAllNotificationMessageCount@3f9342d4]" started-at="2022-01-17T11:30:56 WAT" name="Waiter" finished-at="2022-01-17T11:30:57 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetAllNotificationMessageCount@3f9342d4]" started-at="2022-01-17T11:30:57 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:30:57 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllNotificationMessageCount_200()[pri:2, instance:Report.GetAllNotificationMessageCount@3f9342d4]" started-at="2022-01-17T11:30:57 WAT" name="GetAllNotificationMessageCount_200" finished-at="2022-01-17T11:31:01 WAT" duration-ms="3948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllNotificationMessageCount_200 -->
      </class> <!-- Report.GetAllNotificationMessageCount -->
    </test> <!-- Get Notification Message Count -->
    <test started-at="2022-01-17T11:31:01 WAT" name="Get Platform Message Bot" finished-at="2022-01-17T11:31:07 WAT" duration-ms="6253">
      <class name="Report.GetPlatFormMessageBot">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetPlatFormMessageBot@4b40f651]" started-at="2022-01-17T11:31:01 WAT" name="Waiter" finished-at="2022-01-17T11:31:01 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetPlatFormMessageBot@4b40f651]" started-at="2022-01-17T11:31:01 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:01 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetPlatFormMessageBot_401()[pri:1, instance:Report.GetPlatFormMessageBot@4b40f651]" started-at="2022-01-17T11:31:01 WAT" name="GetPlatFormMessageBot_401" finished-at="2022-01-17T11:31:02 WAT" duration-ms="1191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPlatFormMessageBot_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetPlatFormMessageBot@4b40f651]" started-at="2022-01-17T11:31:02 WAT" name="Waiter" finished-at="2022-01-17T11:31:03 WAT" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetPlatFormMessageBot@4b40f651]" started-at="2022-01-17T11:31:03 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:03 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetPlatFormMessageBot_200()[pri:2, instance:Report.GetPlatFormMessageBot@4b40f651]" started-at="2022-01-17T11:31:03 WAT" name="GetPlatFormMessageBot_200" finished-at="2022-01-17T11:31:07 WAT" duration-ms="3974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPlatFormMessageBot_200 -->
      </class> <!-- Report.GetPlatFormMessageBot -->
    </test> <!-- Get Platform Message Bot -->
    <test started-at="2022-01-17T11:31:07 WAT" name="Get Platform Message Count" finished-at="2022-01-17T11:31:13 WAT" duration-ms="6381">
      <class name="Report.GetPlatformMessageCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetPlatformMessageCount@27eedb64]" started-at="2022-01-17T11:31:07 WAT" name="Waiter" finished-at="2022-01-17T11:31:07 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetPlatformMessageCount@27eedb64]" started-at="2022-01-17T11:31:07 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:07 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetPlatformMessageCount_401()[pri:1, instance:Report.GetPlatformMessageCount@27eedb64]" started-at="2022-01-17T11:31:08 WAT" name="GetPlatformMessageCount_401" finished-at="2022-01-17T11:31:09 WAT" duration-ms="1219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPlatformMessageCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetPlatformMessageCount@27eedb64]" started-at="2022-01-17T11:31:09 WAT" name="Waiter" finished-at="2022-01-17T11:31:09 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetPlatformMessageCount@27eedb64]" started-at="2022-01-17T11:31:09 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:09 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetPlatformMessageCount_200()[pri:2, instance:Report.GetPlatformMessageCount@27eedb64]" started-at="2022-01-17T11:31:09 WAT" name="GetPlatformMessageCount_200" finished-at="2022-01-17T11:31:13 WAT" duration-ms="4065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPlatformMessageCount_200 -->
      </class> <!-- Report.GetPlatformMessageCount -->
    </test> <!-- Get Platform Message Count -->
    <test started-at="2022-01-17T11:31:13 WAT" name="Get Platform Message Users" finished-at="2022-01-17T11:31:20 WAT" duration-ms="6264">
      <class name="Report.GetPlatformMessageUser">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetPlatformMessageUser@38aa816f]" started-at="2022-01-17T11:31:13 WAT" name="Waiter" finished-at="2022-01-17T11:31:14 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetPlatformMessageUser@38aa816f]" started-at="2022-01-17T11:31:14 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:14 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetPlatformMessageUser_401()[pri:1, instance:Report.GetPlatformMessageUser@38aa816f]" started-at="2022-01-17T11:31:14 WAT" name="GetPlatformMessageUser_401" finished-at="2022-01-17T11:31:15 WAT" duration-ms="1360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPlatformMessageUser_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetPlatformMessageUser@38aa816f]" started-at="2022-01-17T11:31:15 WAT" name="Waiter" finished-at="2022-01-17T11:31:16 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetPlatformMessageUser@38aa816f]" started-at="2022-01-17T11:31:16 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:16 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetPlatformMessageUser_200()[pri:2, instance:Report.GetPlatformMessageUser@38aa816f]" started-at="2022-01-17T11:31:16 WAT" name="GetPlatformMessageUser_200" finished-at="2022-01-17T11:31:20 WAT" duration-ms="3780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPlatformMessageUser_200 -->
      </class> <!-- Report.GetPlatformMessageUser -->
    </test> <!-- Get Platform Message Users -->
    <test started-at="2022-01-17T11:31:20 WAT" name="Get Service Count" finished-at="2022-01-17T11:31:26 WAT" duration-ms="6041">
      <class name="Report.GetServiceCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceCount@39a2bb97]" started-at="2022-01-17T11:31:20 WAT" name="Waiter" finished-at="2022-01-17T11:31:20 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceCount@39a2bb97]" started-at="2022-01-17T11:31:20 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:20 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceCount_401()[pri:1, instance:Report.GetServiceCount@39a2bb97]" started-at="2022-01-17T11:31:20 WAT" name="GetServiceCount_401" finished-at="2022-01-17T11:31:22 WAT" duration-ms="1221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceCount@39a2bb97]" started-at="2022-01-17T11:31:22 WAT" name="Waiter" finished-at="2022-01-17T11:31:22 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceCount@39a2bb97]" started-at="2022-01-17T11:31:22 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:22 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceCount_200()[pri:2, instance:Report.GetServiceCount@39a2bb97]" started-at="2022-01-17T11:31:22 WAT" name="GetServiceCount_200" finished-at="2022-01-17T11:31:26 WAT" duration-ms="3763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceCount_200 -->
      </class> <!-- Report.GetServiceCount -->
    </test> <!-- Get Service Count -->
    <test started-at="2022-01-17T11:31:26 WAT" name="Get Service initiated Chart" finished-at="2022-01-17T11:31:32 WAT" duration-ms="6119">
      <class name="Report.GetServiceInitiatedChart">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceInitiatedChart@5bf8fa12]" started-at="2022-01-17T11:31:26 WAT" name="Waiter" finished-at="2022-01-17T11:31:26 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceInitiatedChart@5bf8fa12]" started-at="2022-01-17T11:31:26 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:26 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceInitiatedChart_401()[pri:1, instance:Report.GetServiceInitiatedChart@5bf8fa12]" started-at="2022-01-17T11:31:26 WAT" name="GetServiceInitiatedChart_401" finished-at="2022-01-17T11:31:28 WAT" duration-ms="1252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceInitiatedChart_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceInitiatedChart@5bf8fa12]" started-at="2022-01-17T11:31:28 WAT" name="Waiter" finished-at="2022-01-17T11:31:28 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceInitiatedChart@5bf8fa12]" started-at="2022-01-17T11:31:28 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:28 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceInitiatedChart_200()[pri:2, instance:Report.GetServiceInitiatedChart@5bf8fa12]" started-at="2022-01-17T11:31:28 WAT" name="GetServiceInitiatedChart_200" finished-at="2022-01-17T11:31:32 WAT" duration-ms="3770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceInitiatedChart_200 -->
      </class> <!-- Report.GetServiceInitiatedChart -->
    </test> <!-- Get Service initiated Chart -->
    <test started-at="2022-01-17T11:31:32 WAT" name="Get Service Message Count" finished-at="2022-01-17T11:31:38 WAT" duration-ms="6277">
      <class name="Report.GetServiceMessengerCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceMessengerCount@1a20270e]" started-at="2022-01-17T11:31:32 WAT" name="Waiter" finished-at="2022-01-17T11:31:33 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceMessengerCount@1a20270e]" started-at="2022-01-17T11:31:33 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:33 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceMessengerCount_401()[pri:1, instance:Report.GetServiceMessengerCount@1a20270e]" started-at="2022-01-17T11:31:33 WAT" name="GetServiceMessengerCount_401" finished-at="2022-01-17T11:31:34 WAT" duration-ms="1269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceMessengerCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceMessengerCount@1a20270e]" started-at="2022-01-17T11:31:34 WAT" name="Waiter" finished-at="2022-01-17T11:31:34 WAT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceMessengerCount@1a20270e]" started-at="2022-01-17T11:31:34 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:34 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceMessengerCount_200()[pri:2, instance:Report.GetServiceMessengerCount@1a20270e]" started-at="2022-01-17T11:31:34 WAT" name="GetServiceMessengerCount_200" finished-at="2022-01-17T11:31:38 WAT" duration-ms="3890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceMessengerCount_200 -->
      </class> <!-- Report.GetServiceMessengerCount -->
    </test> <!-- Get Service Message Count -->
    <test started-at="2022-01-17T11:31:39 WAT" name="Get Service User Chart" finished-at="2022-01-17T11:31:45 WAT" duration-ms="6554">
      <class name="Report.GetServiceUserChart">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceUserChart@4b79ac84]" started-at="2022-01-17T11:31:39 WAT" name="Waiter" finished-at="2022-01-17T11:31:39 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceUserChart@4b79ac84]" started-at="2022-01-17T11:31:39 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:39 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceUserChart_401()[pri:1, instance:Report.GetServiceUserChart@4b79ac84]" started-at="2022-01-17T11:31:39 WAT" name="GetServiceUserChart_401" finished-at="2022-01-17T11:31:40 WAT" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceUserChart_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceUserChart@4b79ac84]" started-at="2022-01-17T11:31:40 WAT" name="Waiter" finished-at="2022-01-17T11:31:41 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceUserChart@4b79ac84]" started-at="2022-01-17T11:31:41 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:41 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceUserChart_200()[pri:2, instance:Report.GetServiceUserChart@4b79ac84]" started-at="2022-01-17T11:31:41 WAT" name="GetServiceUserChart_200" finished-at="2022-01-17T11:31:45 WAT" duration-ms="4232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceUserChart_200 -->
      </class> <!-- Report.GetServiceUserChart -->
    </test> <!-- Get Service User Chart -->
    <test started-at="2022-01-17T11:31:45 WAT" name="Get Service_Count" finished-at="2022-01-17T11:31:51 WAT" duration-ms="5931">
      <class name="Report.GetServiceCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceCount@2766ca9d]" started-at="2022-01-17T11:31:45 WAT" name="Waiter" finished-at="2022-01-17T11:31:46 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceCount@2766ca9d]" started-at="2022-01-17T11:31:46 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:46 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceCount_401()[pri:1, instance:Report.GetServiceCount@2766ca9d]" started-at="2022-01-17T11:31:46 WAT" name="GetServiceCount_401" finished-at="2022-01-17T11:31:47 WAT" duration-ms="1209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetServiceCount@2766ca9d]" started-at="2022-01-17T11:31:47 WAT" name="Waiter" finished-at="2022-01-17T11:31:47 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetServiceCount@2766ca9d]" started-at="2022-01-17T11:31:47 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:47 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetServiceCount_200()[pri:2, instance:Report.GetServiceCount@2766ca9d]" started-at="2022-01-17T11:31:47 WAT" name="GetServiceCount_200" finished-at="2022-01-17T11:31:51 WAT" duration-ms="3630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServiceCount_200 -->
      </class> <!-- Report.GetServiceCount -->
    </test> <!-- Get Service_Count -->
    <test started-at="2022-01-17T11:31:51 WAT" name="Get Support Agent Drop Down" finished-at="2022-01-17T11:31:58 WAT" duration-ms="7099">
      <class name="Report.GetSupportAgentDropDown">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportAgentDropDown@7e4204e2]" started-at="2022-01-17T11:31:51 WAT" name="Waiter" finished-at="2022-01-17T11:31:52 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportAgentDropDown@7e4204e2]" started-at="2022-01-17T11:31:52 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:52 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportAgentDropDown_401()[pri:1, instance:Report.GetSupportAgentDropDown@7e4204e2]" started-at="2022-01-17T11:31:52 WAT" name="GetSupportAgentDropDown_401" finished-at="2022-01-17T11:31:53 WAT" duration-ms="1230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportAgentDropDown_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportAgentDropDown@7e4204e2]" started-at="2022-01-17T11:31:53 WAT" name="Waiter" finished-at="2022-01-17T11:31:53 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportAgentDropDown@7e4204e2]" started-at="2022-01-17T11:31:53 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:53 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportAgentDropDown_200()[pri:2, instance:Report.GetSupportAgentDropDown@7e4204e2]" started-at="2022-01-17T11:31:53 WAT" name="GetSupportAgentDropDown_200" finished-at="2022-01-17T11:31:58 WAT" duration-ms="4786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportAgentDropDown_200 -->
      </class> <!-- Report.GetSupportAgentDropDown -->
    </test> <!-- Get Support Agent Drop Down -->
    <test started-at="2022-01-17T11:31:58 WAT" name="Get Support Agent Figure" finished-at="2022-01-17T11:32:12 WAT" duration-ms="13764">
      <class name="Report.GetSupportAgentFigure">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportAgentFigure@5a1de7fb]" started-at="2022-01-17T11:31:58 WAT" name="Waiter" finished-at="2022-01-17T11:31:59 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportAgentFigure@5a1de7fb]" started-at="2022-01-17T11:31:59 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:31:59 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportAgentFigure_401()[pri:1, instance:Report.GetSupportAgentFigure@5a1de7fb]" started-at="2022-01-17T11:31:59 WAT" name="GetSupportAgentFigure_401" finished-at="2022-01-17T11:32:00 WAT" duration-ms="1171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportAgentFigure_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportAgentFigure@5a1de7fb]" started-at="2022-01-17T11:32:00 WAT" name="Waiter" finished-at="2022-01-17T11:32:01 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportAgentFigure@5a1de7fb]" started-at="2022-01-17T11:32:01 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:01 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportAgentFigure_200()[pri:2, instance:Report.GetSupportAgentFigure@5a1de7fb]" started-at="2022-01-17T11:32:01 WAT" name="GetSupportAgentFigure_200" finished-at="2022-01-17T11:32:12 WAT" duration-ms="11459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportAgentFigure_200 -->
      </class> <!-- Report.GetSupportAgentFigure -->
    </test> <!-- Get Support Agent Figure -->
    <test started-at="2022-01-17T11:32:12 WAT" name="Get Support Agent Report" finished-at="2022-01-17T11:32:19 WAT" duration-ms="6786">
      <class name="Report.GetSupportAgentReport">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportAgentReport@3a4621bd]" started-at="2022-01-17T11:32:12 WAT" name="Waiter" finished-at="2022-01-17T11:32:13 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportAgentReport@3a4621bd]" started-at="2022-01-17T11:32:13 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:13 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportAgentReport_401()[pri:1, instance:Report.GetSupportAgentReport@3a4621bd]" started-at="2022-01-17T11:32:13 WAT" name="GetSupportAgentReport_401" finished-at="2022-01-17T11:32:14 WAT" duration-ms="1212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportAgentReport_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportAgentReport@3a4621bd]" started-at="2022-01-17T11:32:14 WAT" name="Waiter" finished-at="2022-01-17T11:32:15 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportAgentReport@3a4621bd]" started-at="2022-01-17T11:32:15 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:15 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportAgentReport_200()[pri:2, instance:Report.GetSupportAgentReport@3a4621bd]" started-at="2022-01-17T11:32:15 WAT" name="GetSupportAgentReport_200" finished-at="2022-01-17T11:32:19 WAT" duration-ms="4461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportAgentReport_200 -->
      </class> <!-- Report.GetSupportAgentReport -->
    </test> <!-- Get Support Agent Report -->
    <test started-at="2022-01-17T11:32:19 WAT" name="Get Support Message Count" finished-at="2022-01-17T11:32:25 WAT" duration-ms="6006">
      <class name="Report.GetSupportMessageCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportMessageCount@40db2a24]" started-at="2022-01-17T11:32:19 WAT" name="Waiter" finished-at="2022-01-17T11:32:20 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportMessageCount@40db2a24]" started-at="2022-01-17T11:32:20 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:20 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportMessageCount_401()[pri:1, instance:Report.GetSupportMessageCount@40db2a24]" started-at="2022-01-17T11:32:20 WAT" name="GetSupportMessageCount_401" finished-at="2022-01-17T11:32:21 WAT" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportMessageCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportMessageCount@40db2a24]" started-at="2022-01-17T11:32:21 WAT" name="Waiter" finished-at="2022-01-17T11:32:21 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportMessageCount@40db2a24]" started-at="2022-01-17T11:32:21 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:21 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportMessageCount_200()[pri:2, instance:Report.GetSupportMessageCount@40db2a24]" started-at="2022-01-17T11:32:21 WAT" name="GetSupportMessageCount_200" finished-at="2022-01-17T11:32:25 WAT" duration-ms="3763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportMessageCount_200 -->
      </class> <!-- Report.GetSupportMessageCount -->
    </test> <!-- Get Support Message Count -->
    <test started-at="2022-01-17T11:32:25 WAT" name="Get Support Session" finished-at="2022-01-17T11:32:31 WAT" duration-ms="6186">
      <class name="Report.GetSupportSession">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportSession@2631f68c]" started-at="2022-01-17T11:32:25 WAT" name="Waiter" finished-at="2022-01-17T11:32:26 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportSession@2631f68c]" started-at="2022-01-17T11:32:26 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:26 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportSession_401()[pri:1, instance:Report.GetSupportSession@2631f68c]" started-at="2022-01-17T11:32:26 WAT" name="GetSupportSession_401" finished-at="2022-01-17T11:32:27 WAT" duration-ms="1202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportSession_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetSupportSession@2631f68c]" started-at="2022-01-17T11:32:27 WAT" name="Waiter" finished-at="2022-01-17T11:32:27 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetSupportSession@2631f68c]" started-at="2022-01-17T11:32:27 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:27 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetSupportSession_200()[pri:2, instance:Report.GetSupportSession@2631f68c]" started-at="2022-01-17T11:32:27 WAT" name="GetSupportSession_200" finished-at="2022-01-17T11:32:31 WAT" duration-ms="3939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSupportSession_200 -->
      </class> <!-- Report.GetSupportSession -->
    </test> <!-- Get Support Session -->
    <test started-at="2022-01-17T11:32:32 WAT" name="Get Transaction Report" finished-at="2022-01-17T11:32:40 WAT" duration-ms="8777">
      <class name="Report.GetTransactionReport">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetTransactionReport@41709512]" started-at="2022-01-17T11:32:32 WAT" name="Waiter" finished-at="2022-01-17T11:32:32 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetTransactionReport@41709512]" started-at="2022-01-17T11:32:32 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:32 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetTransactionReport_401()[pri:1, instance:Report.GetTransactionReport@41709512]" started-at="2022-01-17T11:32:32 WAT" name="GetTransactionReport_401" finished-at="2022-01-17T11:32:33 WAT" duration-ms="1359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTransactionReport_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetTransactionReport@41709512]" started-at="2022-01-17T11:32:33 WAT" name="Waiter" finished-at="2022-01-17T11:32:34 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetTransactionReport@41709512]" started-at="2022-01-17T11:32:34 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:34 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetTransactionReport_200()[pri:2, instance:Report.GetTransactionReport@41709512]" started-at="2022-01-17T11:32:34 WAT" name="GetTransactionReport_200" finished-at="2022-01-17T11:32:40 WAT" duration-ms="6296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTransactionReport_200 -->
      </class> <!-- Report.GetTransactionReport -->
    </test> <!-- Get Transaction Report -->
    <test started-at="2022-01-17T11:32:40 WAT" name="Get User Count" finished-at="2022-01-17T11:32:47 WAT" duration-ms="6243">
      <class name="Report.GetUserCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetUserCount@7d1cfb8b]" started-at="2022-01-17T11:32:40 WAT" name="Waiter" finished-at="2022-01-17T11:32:41 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetUserCount@7d1cfb8b]" started-at="2022-01-17T11:32:41 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:41 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserCount_401()[pri:1, instance:Report.GetUserCount@7d1cfb8b]" started-at="2022-01-17T11:32:41 WAT" name="GetUserCount_401" finished-at="2022-01-17T11:32:42 WAT" duration-ms="1265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetUserCount@7d1cfb8b]" started-at="2022-01-17T11:32:42 WAT" name="Waiter" finished-at="2022-01-17T11:32:43 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetUserCount@7d1cfb8b]" started-at="2022-01-17T11:32:43 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:43 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserCount_200()[pri:2, instance:Report.GetUserCount@7d1cfb8b]" started-at="2022-01-17T11:32:43 WAT" name="GetUserCount_200" finished-at="2022-01-17T11:32:47 WAT" duration-ms="3870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserCount_200 -->
      </class> <!-- Report.GetUserCount -->
    </test> <!-- Get User Count -->
    <test started-at="2022-01-17T11:32:47 WAT" name="Get User Message Count" finished-at="2022-01-17T11:32:53 WAT" duration-ms="6024">
      <class name="Report.GetUserMessageCount">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetUserMessageCount@3d1848cc]" started-at="2022-01-17T11:32:47 WAT" name="Waiter" finished-at="2022-01-17T11:32:47 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetUserMessageCount@3d1848cc]" started-at="2022-01-17T11:32:47 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:47 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserMessageCount_401()[pri:1, instance:Report.GetUserMessageCount@3d1848cc]" started-at="2022-01-17T11:32:47 WAT" name="GetUserMessageCount_401" finished-at="2022-01-17T11:32:48 WAT" duration-ms="1224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserMessageCount_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:Report.GetUserMessageCount@3d1848cc]" started-at="2022-01-17T11:32:48 WAT" name="Waiter" finished-at="2022-01-17T11:32:49 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:Report.GetUserMessageCount@3d1848cc]" started-at="2022-01-17T11:32:49 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:49 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetUserMessageCount_200()[pri:2, instance:Report.GetUserMessageCount@3d1848cc]" started-at="2022-01-17T11:32:49 WAT" name="GetUserMessageCount_200" finished-at="2022-01-17T11:32:53 WAT" duration-ms="3730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserMessageCount_200 -->
      </class> <!-- Report.GetUserMessageCount -->
    </test> <!-- Get User Message Count -->
    <test started-at="2022-01-17T11:32:53 WAT" name="Get Stake Holder User list" finished-at="2022-01-17T11:33:03 WAT" duration-ms="10453">
      <class name="User.GetStakeHolderUserList">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:32:53 WAT" name="Waiter" finished-at="2022-01-17T11:32:53 WAT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:32:53 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:53 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetStakeHolderUserList_200()[pri:1, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:32:53 WAT" name="GetStakeHolderUserList_200" finished-at="2022-01-17T11:32:57 WAT" duration-ms="3671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetStakeHolderUserList_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:32:57 WAT" name="Waiter" finished-at="2022-01-17T11:32:58 WAT" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:32:58 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:32:58 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetStakeHolderUserList_401()[pri:2, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:32:58 WAT" name="GetStakeHolderUserList_401" finished-at="2022-01-17T11:32:59 WAT" duration-ms="1407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetStakeHolderUserList_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:32:59 WAT" name="Waiter" finished-at="2022-01-17T11:33:00 WAT" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:33:00 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:00 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetStakeHolderUserList_404()[pri:3, instance:User.GetStakeHolderUserList@2a62b5bc]" started-at="2022-01-17T11:33:00 WAT" name="GetStakeHolderUserList_404" finished-at="2022-01-17T11:33:03 WAT" duration-ms="3724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetStakeHolderUserList_404 -->
      </class> <!-- User.GetStakeHolderUserList -->
    </test> <!-- Get Stake Holder User list -->
    <test started-at="2022-01-17T11:33:03 WAT" name="Get User list" finished-at="2022-01-17T11:33:10 WAT" duration-ms="6797">
      <class name="User.GetUserList">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.GetUserList@1f3f02ee]" started-at="2022-01-17T11:33:03 WAT" name="Waiter" finished-at="2022-01-17T11:33:04 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.GetUserList@1f3f02ee]" started-at="2022-01-17T11:33:04 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:04 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllUsers_200()[pri:1, instance:User.GetUserList@1f3f02ee]" started-at="2022-01-17T11:33:04 WAT" name="GetAllUsers_200" finished-at="2022-01-17T11:33:08 WAT" duration-ms="4477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllUsers_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.GetUserList@1f3f02ee]" started-at="2022-01-17T11:33:08 WAT" name="Waiter" finished-at="2022-01-17T11:33:09 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.GetUserList@1f3f02ee]" started-at="2022-01-17T11:33:09 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:09 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="GetAllUsers_401()[pri:2, instance:User.GetUserList@1f3f02ee]" started-at="2022-01-17T11:33:09 WAT" name="GetAllUsers_401" finished-at="2022-01-17T11:33:10 WAT" duration-ms="1202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllUsers_401 -->
      </class> <!-- User.GetUserList -->
    </test> <!-- Get User list -->
    <test started-at="2022-01-17T11:33:10 WAT" name="Update User" finished-at="2022-01-17T11:33:31 WAT" duration-ms="20466">
      <class name="User.UpdateUser">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:10 WAT" name="Waiter" finished-at="2022-01-17T11:33:11 WAT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:11 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:11 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateUser_200()[pri:1, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:11 WAT" name="UpdateUser_200" finished-at="2022-01-17T11:33:16 WAT" duration-ms="5467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUser_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:16 WAT" name="Waiter" finished-at="2022-01-17T11:33:17 WAT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:17 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:17 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateUser_400()[pri:2, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:17 WAT" name="UpdateUser_400" finished-at="2022-01-17T11:33:20 WAT" duration-ms="3687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUser_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:21 WAT" name="Waiter" finished-at="2022-01-17T11:33:21 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:21 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:21 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateUser_401()[pri:3, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:21 WAT" name="UpdateUser_401" finished-at="2022-01-17T11:33:22 WAT" duration-ms="1219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUser_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:22 WAT" name="Waiter" finished-at="2022-01-17T11:33:23 WAT" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:23 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:23 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="UpdateUser_404()[pri:4, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:23 WAT" name="UpdateUser_404" finished-at="2022-01-17T11:33:26 WAT" duration-ms="3689" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor397.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at User.UpdateUser.UpdateUser_404(UpdateUser.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUser_404 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:26 WAT" name="Waiter" finished-at="2022-01-17T11:33:27 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:27 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:27 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="UpdateUser_404()[pri:4, instance:User.UpdateUser@3a5ecce3]" started-at="2022-01-17T11:33:27 WAT" name="UpdateUser_404" finished-at="2022-01-17T11:33:31 WAT" duration-ms="3683" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor397.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at User.UpdateUser.UpdateUser_404(UpdateUser.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUser_404 -->
      </class> <!-- User.UpdateUser -->
    </test> <!-- Update User -->
    <test started-at="2022-01-17T11:33:31 WAT" name="Update Profile" finished-at="2022-01-17T11:33:53 WAT" duration-ms="22249">
      <class name="User.ProfileUpdate">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:31 WAT" name="Waiter" finished-at="2022-01-17T11:33:31 WAT" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:31 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:31 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ProfileUpdate_200()[pri:1, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:31 WAT" name="ProfileUpdate_200" finished-at="2022-01-17T11:33:36 WAT" duration-ms="4429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProfileUpdate_200 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:36 WAT" name="Waiter" finished-at="2022-01-17T11:33:36 WAT" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:36 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:36 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ProfileUpdate_400()[pri:2, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:36 WAT" name="ProfileUpdate_400" finished-at="2022-01-17T11:33:41 WAT" duration-ms="5037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProfileUpdate_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:41 WAT" name="Waiter" finished-at="2022-01-17T11:33:42 WAT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:42 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:42 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ProfileUpdate_401()[pri:3, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:42 WAT" name="ProfileUpdate_401" finished-at="2022-01-17T11:33:43 WAT" duration-ms="1231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProfileUpdate_401 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:43 WAT" name="Waiter" finished-at="2022-01-17T11:33:44 WAT" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:44 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:44 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="ProfileUpdate_404()[pri:4, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:44 WAT" name="ProfileUpdate_404" finished-at="2022-01-17T11:33:49 WAT" duration-ms="5134" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor397.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at User.ProfileUpdate.ProfileUpdate_404(ProfileUpdate.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProfileUpdate_404 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:49 WAT" name="Waiter" finished-at="2022-01-17T11:33:49 WAT" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:49 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:49 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="ProfileUpdate_404()[pri:4, instance:User.ProfileUpdate@531f4093]" started-at="2022-01-17T11:33:49 WAT" name="ProfileUpdate_404" finished-at="2022-01-17T11:33:53 WAT" duration-ms="3707" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 2 expectations failed.
Expected status code <404> but was <400>.

Expected status line "HTTP/1.1 404 Not Found" doesn't match actual status line "HTTP/1.1 400 Bad Request".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor397.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at User.ProfileUpdate.ProfileUpdate_404(ProfileUpdate.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProfileUpdate_404 -->
      </class> <!-- User.ProfileUpdate -->
    </test> <!-- Update Profile -->
    <test started-at="2022-01-17T11:33:53 WAT" name="Send Mail with Multiple attachment" finished-at="2022-01-17T11:34:16 WAT" duration-ms="22890">
      <class name="BE.SendMailwithAttachment.SendMailMultipleAttachment">
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:33:53 WAT" name="Waiter" finished-at="2022-01-17T11:33:54 WAT" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:33:54 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:54 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method retried="true" signature="SendMailMultipleAttachment64_400()[pri:1, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:33:54 WAT" name="SendMailMultipleAttachment64_400" finished-at="2022-01-17T11:33:57 WAT" duration-ms="3730" status="SKIP">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <500>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <500>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at BE.SendMailwithAttachment.SendMailMultipleAttachment.SendMailMultipleAttachment64_400(SendMailMultipleAttachment.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMailMultipleAttachment64_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:33:57 WAT" name="Waiter" finished-at="2022-01-17T11:33:58 WAT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:33:58 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:33:58 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendMailMultipleAttachment64_400()[pri:1, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:33:58 WAT" name="SendMailMultipleAttachment64_400" finished-at="2022-01-17T11:34:02 WAT" duration-ms="3559" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[expected: <400> but was: <500>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: expected: <400> but was: <500>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:527)
at BE.SendMailwithAttachment.SendMailMultipleAttachment.SendMailMultipleAttachment64_400(SendMailMultipleAttachment.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMailMultipleAttachment64_400 -->
        <test-method is-config="true" signature="Waiter()[pri:0, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:34:02 WAT" name="Waiter" finished-at="2022-01-17T11:34:02 WAT" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Waiter -->
        <test-method is-config="true" signature="setUpConfiguration()[pri:0, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:34:02 WAT" name="setUpConfiguration" finished-at="2022-01-17T11:34:02 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpConfiguration -->
        <test-method signature="SendMailMultipleAttachment64_200()[pri:2, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:34:02 WAT" name="SendMailMultipleAttachment64_200" finished-at="2022-01-17T11:34:14 WAT" duration-ms="12017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMailMultipleAttachment64_200 -->
        <test-method is-config="true" signature="ClearMailBox()[pri:0, instance:BE.SendMailwithAttachment.SendMailMultipleAttachment@16fdec90]" started-at="2022-01-17T11:34:14 WAT" name="ClearMailBox" finished-at="2022-01-17T11:34:16 WAT" duration-ms="1922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearMailBox -->
      </class> <!-- BE.SendMailwithAttachment.SendMailMultipleAttachment -->
    </test> <!-- Send Mail with Multiple attachment -->
  </suite> <!-- Ebanqo Main BackEnd -->
</testng-results>
